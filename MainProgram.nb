(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    304332,       5797]
NotebookOptionsPosition[    299984,       5719]
NotebookOutlinePosition[    300341,       5735]
CellTagsIndexPosition[    300298,       5732]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Image Processing: Finding structures in images:", "Title",
 CellChangeTimes->{{3.729941212862005*^9, 
  3.729941244491377*^9}},ExpressionUUID->"71f35941-b08c-424a-baa8-\
252a5a3b7657"],

Cell[CellGroupData[{

Cell["Basic variables:", "Section",
 CellChangeTimes->{{3.729941271027755*^9, 
  3.729941294201789*^9}},ExpressionUUID->"c39ca771-a537-4a66-8257-\
52e888755311"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "dir", " ", ":=", " ", 
   "\"\</Users/Viktor/Documents/London./University/Practical Mathematics \
2/Mathematica/MiniProject/Images/\>\""}], ";"}]], "Input",ExpressionUUID->\
"2ffddc5d-25b6-40e7-b71e-303c3e592c2f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Stentiford Thinning Algorithm", "Section",
 CellChangeTimes->{{3.729941321273878*^9, 
  3.7299413366877823`*^9}},ExpressionUUID->"ca65c520-946d-4ef3-986d-\
4c0122df0c6c"],

Cell[CellGroupData[{

Cell["Connectivity", "Subsection",
 CellChangeTimes->{{3.729941343463336*^9, 3.7299413520149612`*^9}, 
   3.729941504576808*^9},ExpressionUUID->"8f4988c9-54d0-4ea6-8374-\
61b95a40ff28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"connectivity", "[", "imageData_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"array", " ", "=", " ", "imageData"}], ",", " ", 
      RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
      RowBox[{"j", " ", "=", " ", "2"}], ",", " ", "p0", ",", "p1", ",", " ", 
      "p2", ",", " ", "p3", ",", " ", "p4", ",", " ", "p5", ",", " ", "p6", 
      ",", " ", "p7", ",", " ", "p8", ",", " ", "values", ",", " ", 
      "booleanList", ",", " ", "con", ",", " ", "endPoint", ",", " ", "rule", 
      ",", " ", "rule2"}], "}"}], ",", " ", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p0", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", " ", "j"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p1", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", " ", 
         RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", " ", 
         RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p3", " ", "=", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", " ", "j"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p4", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", " ", "-", "1"}], ",", " ", 
         RowBox[{"j", "-", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p5", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{"i", " ", ",", " ", 
         RowBox[{"j", "-", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p6", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", " ", "+", "1"}], ",", " ", 
         RowBox[{"j", "-", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p7", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", "+", "1"}], ",", " ", "j"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p8", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", "+", "1"}], ",", " ", 
         RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"rule", " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"False", "\[Rule]", "0"}], ",", " ", 
        RowBox[{"True", "\[Rule]", "1"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rule2", " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "\[Rule]", "1"}], ",", " ", 
        RowBox[{"1", "\[Rule]", "0"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"values", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "p1", ",", " ", "p2", ",", " ", "p3", ",", " ", "p4", ",", " ", "p5", 
        ",", " ", "p6", ",", " ", "p7", ",", " ", "p8"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"booleanList", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p1", "<", "p2"}], ",", " ", 
         RowBox[{"p2", "<", "p3"}], ",", " ", 
         RowBox[{"p3", "<", "p4"}], ",", " ", 
         RowBox[{"p4", "<", "p5"}], ",", " ", 
         RowBox[{"p5", "<", "p6"}], ",", 
         RowBox[{"p6", "<", "p7"}], ",", " ", 
         RowBox[{"p7", "<", "p8"}], ",", " ", 
         RowBox[{"p8", "<", "p1"}]}], "}"}], " ", "//.", " ", "rule"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"con", "=", " ", 
      RowBox[{"Total", "[", "booleanList", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"values", " ", "/.", " ", "rule2"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"endPoint", " ", "=", " ", 
      RowBox[{
       RowBox[{"Total", "[", "values", "]"}], "\[GreaterEqual]", "2"}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"con", ",", " ", "endPoint"}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7281291826073647`*^9, 3.728129186647246*^9}, {
   3.728129218229986*^9, 3.7281292404547853`*^9}, {3.728129281261239*^9, 
   3.728129335841318*^9}, {3.7281293918309393`*^9, 3.728129420452942*^9}, {
   3.728129467140047*^9, 3.728129578519823*^9}, {3.728129648174657*^9, 
   3.728129875588372*^9}, {3.728129918322781*^9, 3.728129932530139*^9}, {
   3.7281300332542467`*^9, 3.728130112043317*^9}, 3.7281302433568363`*^9, {
   3.728130324202552*^9, 3.7281303281780233`*^9}, {3.728130534003504*^9, 
   3.7281306794590063`*^9}, {3.728130715291708*^9, 3.728130731345405*^9}, {
   3.728130804648138*^9, 3.728130829525009*^9}, {3.728130870165764*^9, 
   3.7281309428325872`*^9}, {3.728130974770846*^9, 3.728130979911931*^9}, {
   3.728131246310236*^9, 3.728131246893155*^9}, {3.728131364625169*^9, 
   3.728131423549775*^9}, {3.728131569652195*^9, 3.728131586345221*^9}, {
   3.728131727234153*^9, 3.728131733785413*^9}, {3.7281318106325607`*^9, 
   3.728131866573204*^9}, {3.728131906649699*^9, 3.728131956425789*^9}, {
   3.728131989776285*^9, 3.728132066179042*^9}, {3.728132218814968*^9, 
   3.72813226969812*^9}, {3.728132324073881*^9, 3.728132368223646*^9}, {
   3.728132473251936*^9, 3.7281324743378563`*^9}, {3.7281361685494547`*^9, 
   3.7281361705237017`*^9}, 3.728136202420452*^9, {3.7281369779609413`*^9, 
   3.728137028238988*^9}, {3.728209883348584*^9, 3.728209896650339*^9}, {
   3.728209963009349*^9, 3.7282099808149242`*^9}, {3.729937298150919*^9, 
   3.729937304341189*^9}, {3.7299376248841047`*^9, 3.729937639839349*^9}, {
   3.7299388984291477`*^9, 3.72993890001891*^9}, 3.7299412559297457`*^9, {
   3.72994135477063*^9, 3.7299413550819197`*^9}, {3.729956272920364*^9, 
   3.7299563435722523`*^9}, {3.729956396650271*^9, 3.729956397330172*^9}, {
   3.7299565103024893`*^9, 
   3.7299565131978083`*^9}},ExpressionUUID->"a6706d39-7b12-455f-8a16-\
ff6d8787be69"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stentiford Thinning Algorithm", "Subsection",
 CellChangeTimes->{{3.729941363678605*^9, 
  3.7299413685266247`*^9}},ExpressionUUID->"92e84e06-8d59-4110-b52d-\
8d88d8b3c3ae"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
   "%", " ", "Stentiford", " ", "Thinning", " ", "Algorithm", "\n", 
    "\[IndentingNewLine]", "%", " ", "Developed", " ", "by", " ", 
    "mohanpalaniyappan", "\n", "%", " ", "Amrita", " ", "E"}], "-", 
   RowBox[{"Learning", " ", "Research", " ", "Lab", "\n", "%", " ", 
    RowBox[{
     RowBox[{"mohanpalani82", "@", "gmail"}], ".", "com"}], "\n", "%", " ", 
    "Reference", "\n", "%", " ", "IMAGE", " ", "PROCESSING", " ", 
    "TECHNIQUES", " ", "FOR", " ", "MACHINE", " ", "VISION", "\n", "%", " ", 
    "Alberto", " ", "Martin", " ", "and", " ", "Sabri", " ", "Tosunoglu"}]}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.7281331686386557`*^9, 3.7281331742655067`*^9}, {
  3.728133210823888*^9, 
  3.728133213143696*^9}},ExpressionUUID->"a9894c1f-21e0-42b2-a849-\
6d179d2b4527"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"stentiford", "[", "imgInput_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"imgData", " ", "=", " ", "imgInput"}], ",", " ", "rows", ",", 
       " ", "columns", ",", " ", "checkVal", ",", " ", "template", ",", " ", 
       "M1", ",", " ", "M2", ",", " ", "M3", ",", " ", "M4", ",", " ", 
       "window", ",", " ", "andOp1", ",", "looper", ",", " ", "con", ",", " ",
        "endPoint", ",", " ", "templateSame", ",", " ", "imgProcess", ",", 
       " ", "binVal", ",", " ", "ind1", ",", " ", "ind2"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M1", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"M2", " ", "=", " ", "M1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"M3", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"M4", " ", "=", " ", "M3"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"M1", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1", "}"}], ",", " ", 
           RowBox[{"{", "0", "}"}], ",", " ", 
           RowBox[{"{", "0", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"M2", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"M3", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0", "}"}], ",", " ", 
           RowBox[{"{", "0", "}"}], ",", " ", 
           RowBox[{"{", "1", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"M4", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], "}"}]}], ";"}],
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{"MatrixForm", "[", "M1", "]"}], ",", " ", 
          RowBox[{"MatrixForm", "[", "M2", "]"}], ",", " ", 
          RowBox[{"MatrixForm", "[", "M3", "]"}], ",", " ", 
          RowBox[{"MatrixForm", "[", "M4", "]"}]}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rows", ",", " ", "columns"}], "}"}], " ", "=", " ", 
       RowBox[{"Dimensions", "[", "imgData", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"checkVal", " ", "=", " ", "2"}], ";", "\[IndentingNewLine]", 
      RowBox[{"template", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"imgProcess", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "rows"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "columns"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"looper", " ", "=", " ", "5"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{"looper", "<", "15"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
             RowBox[{"i", " ", "\[LessEqual]", " ", 
              RowBox[{"rows", "-", "1"}]}], ",", " ", 
             RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"j", " ", "=", " ", "2"}], ",", " ", 
                RowBox[{"j", "\[LessEqual]", " ", 
                 RowBox[{"columns", "-", "1"}]}], ",", " ", 
                RowBox[{"j", "++"}], ",", " ", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"window", " ", "=", 
                  RowBox[{"imgData", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ";;", 
                    RowBox[{"i", "+", "1"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"j", "-", "1"}], ";;", 
                    RowBox[{"j", "+", "1"}]}]}], "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"template", " ", "\[Equal]", "1"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"andOp1", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"window", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "==", 
                    "M1"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"andOp1", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"Equivalent", "[", 
                    RowBox[{
                    RowBox[{"MatrixForm", "[", 
                    RowBox[{"window", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], ",", 
                    " ", 
                    RowBox[{"MatrixForm", "[", "M1", "]"}]}], "]"}], "//", 
                    "TautologyQ"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"templateSame", " ", "=", " ", "andOp1"}], 
                    ";"}]}], " ", "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"template", " ", "\[Equal]", "2"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"andOp1", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"window", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", " ", "All"}], "]"}], "]"}], "==", 
                    "M2"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"andOp1", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"Equivalent", "[", 
                    RowBox[{
                    RowBox[{"MatrixForm", "[", 
                    RowBox[{"window", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", " ", "All"}], "]"}], "]"}], "]"}], ",", 
                    " ", 
                    RowBox[{"MatrixForm", "[", "M2", "]"}]}], "]"}], "//", 
                    "TautologyQ"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"templateSame", " ", "=", " ", "andOp1"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"template", " ", "\[Equal]", "3"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"andOp1", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"window", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "==", 
                    "M3"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"andOp1", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"Equivalent", "[", 
                    RowBox[{
                    RowBox[{"MatrixForm", "[", 
                    RowBox[{"window", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], ",", 
                    " ", 
                    RowBox[{"MatrixForm", "[", "M3", "]"}]}], "]"}], "//", 
                    "TautologyQ"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"templateSame", " ", "=", " ", "andOp1"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"template", " ", "\[Equal]", "4"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"andOp1", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"window", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", " ", "All"}], "]"}], "]"}], "==", 
                    "M4"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"andOp1", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"Equivalent", "[", 
                    RowBox[{
                    RowBox[{"MatrixForm", "[", 
                    RowBox[{"window", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", " ", "All"}], "]"}], "]"}], "]"}], ",", 
                    " ", 
                    RowBox[{"MatrixForm", "[", "M4", "]"}]}], "]"}], "//", 
                    "TautologyQ"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"templateSame", " ", "=", " ", "andOp1"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"con", ",", " ", "endPoint"}], "}"}], " ", "=", 
                  " ", 
                  RowBox[{"connectivity", "[", "window", "]"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"And", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"imgData", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], " ", 
                    "\[Equal]", " ", "0"}], ",", "templateSame", ",", " ", 
                    RowBox[{"con", " ", "\[Equal]", " ", "1"}], ",", " ", 
                    "endPoint"}], " ", "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"imgProcess", " ", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], " ", "=", " ",
                     "1"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"checkVal", " ", "=", " ", 
            RowBox[{"Total", "[", 
             RowBox[{"imgProcess", ",", " ", "2"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"checkVal", "\[Equal]", "0"}], ",", " ", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"looper", " ", "=", " ", 
               RowBox[{"looper", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]",
             "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"binVal", " ", "=", " ", 
            RowBox[{"Position", "[", 
             RowBox[{"imgProcess", ",", " ", "1"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"ind1", ",", " ", "ind2"}], "}"}], " ", "=", " ", 
               RowBox[{"binVal", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              
              RowBox[{
               RowBox[{"imgData", "[", 
                RowBox[{"[", 
                 RowBox[{"ind1", ",", " ", "ind2"}], "]"}], "]"}], " ", "=", 
               "1"}], ";"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", " ", 
               RowBox[{"Length", "[", "binVal", "]"}]}], "}"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"imgProcess", " ", "=", " ", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "rows"}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"j", ",", " ", "columns"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"template", " ", "=", " ", 
            RowBox[{"template", " ", "+", " ", "1"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"template", "\[Equal]", "5"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"imgProcess", " ", "=", " ", 
               RowBox[{"Table", "[", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", "rows"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", " ", "columns"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"template", " ", "=", " ", "1"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], " ", "\[IndentingNewLine]", 
          ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
        "Infinity"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "imgData", "]"}], ";"}]}], " ", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7281325856819553`*^9, 3.728132658552148*^9}, {
   3.728132991923265*^9, 3.728133053166679*^9}, {3.728133132356876*^9, 
   3.728133139594738*^9}, {3.728133228192903*^9, 3.728133261174116*^9}, {
   3.7281332997641582`*^9, 3.7281333007800093`*^9}, 3.728133355673732*^9, {
   3.7281333994096622`*^9, 3.72813347112508*^9}, {3.7281336810450974`*^9, 
   3.728133781743573*^9}, {3.728133816503594*^9, 3.728133854660892*^9}, {
   3.7281338887552433`*^9, 3.72813390826814*^9}, {3.728133944482819*^9, 
   3.7281339855514183`*^9}, {3.728134030597104*^9, 3.728134044341175*^9}, {
   3.7281341983120613`*^9, 3.72813424918799*^9}, {3.728134309147451*^9, 
   3.7281343713512163`*^9}, {3.728134406527721*^9, 3.728134411821506*^9}, {
   3.728134521880918*^9, 3.728134558538493*^9}, {3.728134685700226*^9, 
   3.728134776910076*^9}, {3.728135283091209*^9, 3.7281352876558313`*^9}, {
   3.728135365673442*^9, 3.7281354494661903`*^9}, {3.728135615684642*^9, 
   3.728135655673337*^9}, {3.728135960021572*^9, 3.728135961013864*^9}, {
   3.728136053705928*^9, 3.728136288807473*^9}, {3.728136319228614*^9, 
   3.728136325187443*^9}, {3.728136383339829*^9, 3.728136391850602*^9}, {
   3.7281364924396553`*^9, 3.728136823568159*^9}, {3.728136899694894*^9, 
   3.728136956716659*^9}, {3.7281370393768873`*^9, 3.728137049841373*^9}, {
   3.72813716774067*^9, 3.72813722349654*^9}, {3.728137269517893*^9, 
   3.728137272702588*^9}, {3.72813733496487*^9, 3.7281374283676453`*^9}, {
   3.7281374617268763`*^9, 3.728137488108585*^9}, {3.728209504054016*^9, 
   3.728209508668118*^9}, {3.7282097627046127`*^9, 3.728209825654118*^9}, {
   3.728209868317906*^9, 3.728209871916177*^9}, {3.728210125826559*^9, 
   3.728210166727522*^9}, {3.728210203422141*^9, 3.7282102117415323`*^9}, {
   3.728210285634542*^9, 3.728210306536096*^9}, {3.728210424927196*^9, 
   3.728210500422998*^9}, {3.728210563225333*^9, 3.728210680262663*^9}, 
   3.728210716290882*^9, 3.728211249159082*^9, {3.72821131513373*^9, 
   3.728211315212903*^9}, {3.7282114032307158`*^9, 3.728211421276278*^9}, {
   3.728211941122414*^9, 3.7282120903948927`*^9}, {3.7282129675046673`*^9, 
   3.728212971655528*^9}, {3.728213107483286*^9, 3.728213258093112*^9}, {
   3.728213291532485*^9, 3.728213349497376*^9}, {3.728213381441472*^9, 
   3.728213393062735*^9}, {3.728213431560135*^9, 3.728213480259144*^9}, {
   3.728213521754962*^9, 3.728213532281947*^9}, {3.728213602616522*^9, 
   3.728213734680648*^9}, {3.728213784512733*^9, 3.7282137999588137`*^9}, {
   3.7282139641923923`*^9, 3.728213966226582*^9}, {3.728213997895359*^9, 
   3.728214041477623*^9}, {3.728214192329562*^9, 3.728214213791142*^9}, {
   3.728214243813239*^9, 3.7282142562696037`*^9}, {3.7282143667538424`*^9, 
   3.72821440366343*^9}, {3.728214527340125*^9, 3.728214577416923*^9}, {
   3.7282146555447483`*^9, 3.728214702684782*^9}, {3.728214752241975*^9, 
   3.728214773240603*^9}, {3.728215017608959*^9, 3.728215101420403*^9}, {
   3.728215219593442*^9, 3.7282152316801558`*^9}, {3.728215314813333*^9, 
   3.728215390681245*^9}, {3.728215682890295*^9, 3.728215685918085*^9}, {
   3.728215753947568*^9, 3.728215764393353*^9}, {3.728216156340724*^9, 
   3.72821617737838*^9}, {3.728216309558858*^9, 3.7282163098042173`*^9}, {
   3.7282163607785673`*^9, 3.728216369809249*^9}, {3.728216483727092*^9, 
   3.7282165125238037`*^9}, {3.728216581185803*^9, 3.728216586879571*^9}, {
   3.728216634951859*^9, 3.728216638229506*^9}, {3.7282166935089083`*^9, 
   3.728216726682189*^9}, {3.728216765746613*^9, 3.728216790948762*^9}, {
   3.728216826191649*^9, 3.7282168322297983`*^9}, {3.7282168655061617`*^9, 
   3.728216876251688*^9}, {3.7282169348667097`*^9, 3.728216941433695*^9}, {
   3.7282169965547543`*^9, 3.7282169967607937`*^9}, {3.728217027168174*^9, 
   3.7282170335740843`*^9}, {3.728217094551422*^9, 3.7282170954292917`*^9}, {
   3.7282171549854107`*^9, 3.728217167164083*^9}, {3.728217202393309*^9, 
   3.728217208127326*^9}, {3.7282173012294083`*^9, 3.72821732809967*^9}, {
   3.728217479246272*^9, 3.728217518970529*^9}, {3.728217796922847*^9, 
   3.728217835381464*^9}, {3.72821791871595*^9, 3.72821794840837*^9}, 
   3.728217987499217*^9, {3.72821807583681*^9, 3.728218125945675*^9}, {
   3.728218239543544*^9, 3.728218249733461*^9}, {3.7282182911585484`*^9, 
   3.728218300324092*^9}, {3.7282183470187693`*^9, 3.728218354304071*^9}, {
   3.728218397425734*^9, 3.7282184398622437`*^9}, {3.728218488934651*^9, 
   3.728218489387774*^9}, {3.728218640830942*^9, 3.728218697802043*^9}, 
   3.728218734924284*^9, {3.728218993159568*^9, 3.72821901140562*^9}, {
   3.728219174762467*^9, 3.728219177368327*^9}, {3.7282192583408833`*^9, 
   3.728219303392754*^9}, {3.728219368655793*^9, 3.728219432460285*^9}, {
   3.728219496635088*^9, 3.728219650459388*^9}, {3.7282196857151127`*^9, 
   3.728219686032778*^9}, {3.728219724017325*^9, 3.728219736136413*^9}, {
   3.728219788016797*^9, 3.728219801756838*^9}, {3.728219842238995*^9, 
   3.728219858466659*^9}, 3.728219917675045*^9, {3.728219960420863*^9, 
   3.7282199627367077`*^9}, {3.728220007807851*^9, 3.728220049147801*^9}, {
   3.728220113536467*^9, 3.7282201200127783`*^9}, {3.72822016008638*^9, 
   3.7282201828188*^9}, {3.728220275144075*^9, 3.728220282838923*^9}, {
   3.72822033451101*^9, 3.728220364130659*^9}, {3.728220430515244*^9, 
   3.7282204422235193`*^9}, {3.728220575660129*^9, 3.7282205918987627`*^9}, {
   3.7282206383943872`*^9, 3.7282207014612103`*^9}, {3.7282207743327103`*^9, 
   3.728220826839677*^9}, {3.728220889686805*^9, 3.7282208935729713`*^9}, 
   3.7282209473791656`*^9, {3.728220984283614*^9, 3.728221025232236*^9}, 
   3.7282210850969553`*^9, {3.728222361454028*^9, 3.728222363810528*^9}, 
   3.728222505735365*^9, {3.729937238472703*^9, 3.729937269553701*^9}, {
   3.7299373123964777`*^9, 3.729937313473144*^9}, {3.729938020444571*^9, 
   3.729938043627673*^9}, {3.729956405630674*^9, 
   3.729956405965879*^9}},ExpressionUUID->"906b2933-71e7-4d59-b87b-\
226604c92386"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Preprocessing for Projection", "Subsection",
 CellChangeTimes->{{3.729941393854459*^9, 3.7299414154124813`*^9}, 
   3.729941500985118*^9},ExpressionUUID->"776a3389-e983-4c90-a4a6-\
a2828537cc9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"preprocessingP", "[", 
   RowBox[{"imgInput_", ",", " ", "conType_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"imgData", " ", "=", " ", "imgInput"}], ",", " ", "imgProcess", 
      ",", " ", "rows", ",", " ", "columns", ",", " ", "window", ",", " ", 
      "nNum", ",", " ", "conNum", ",", " ", "delMarks", ",", " ", "ind1", ",",
       " ", "ind2", ",", " ", 
      RowBox[{"looper", " ", "=", " ", "True"}], ",", " ", 
      RowBox[{"checkImg", " ", "=", " ", "imgInput"}]}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rows", ",", " ", "columns"}], "}"}], " ", "=", " ", 
      RowBox[{"Dimensions", "[", "imgData", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
         "looper", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"imgProcess", " ", "=", " ", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "rows"}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "columns"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
             RowBox[{"i", " ", "\[LessEqual]", " ", 
              RowBox[{"rows", "-", "1"}]}], ",", " ", 
             RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"j", " ", "=", " ", "2"}], ",", " ", 
                RowBox[{"j", "\[LessEqual]", " ", 
                 RowBox[{"columns", "-", "1"}]}], ",", " ", 
                RowBox[{"j", "++"}], ",", " ", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"window", " ", "=", 
                  RowBox[{"imgData", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ";;", 
                    RowBox[{"i", "+", "1"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"j", "-", "1"}], ";;", 
                    RowBox[{"j", "+", "1"}]}]}], "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"conNum", " ", "=", " ", 
                  RowBox[{
                   RowBox[{"connectivity", "[", "window", "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"conType", "\[Equal]", "8"}], ",", 
                   RowBox[{"nNum", " ", "=", " ", 
                    RowBox[{"neighbours8", "[", "window", "]"}]}]}], "]"}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"conType", "\[Equal]", "6"}], ",", " ", 
                   RowBox[{"nNum", " ", "=", " ", 
                    RowBox[{"neighbours6", "[", "window", "]"}]}]}], "]"}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"conType", "\[Equal]", "4"}], ",", " ", 
                   RowBox[{"nNum", " ", "=", " ", 
                    RowBox[{"neighbours4", "[", "window", "]"}]}]}], "]"}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"And", "[", 
                    RowBox[{
                    RowBox[{"conNum", " ", "<", "2"}], ",", " ", 
                    RowBox[{"nNum", "\[LessEqual]", "2"}], ",", " ", 
                    RowBox[{
                    RowBox[{"imgData", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "\[Equal]", 
                    "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"imgProcess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], " ", "=", " ",
                     "1"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"delMarks", " ", "=", " ", 
            RowBox[{"Position", "[", 
             RowBox[{"imgProcess", ",", " ", "1"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"ind1", ",", " ", "ind2"}], "}"}], " ", "=", " ", 
               RowBox[{"delMarks", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              
              RowBox[{
               RowBox[{"imgData", "[", 
                RowBox[{"[", 
                 RowBox[{"ind1", ",", " ", "ind2"}], "]"}], "]"}], "=", "1"}],
               ";"}], "\[IndentingNewLine]", ",", " ", 
             RowBox[{"{", 
              RowBox[{"i", ",", " ", "1", ",", " ", 
               RowBox[{"Length", "[", "delMarks", "]"}]}], "}"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Total", "[", 
               RowBox[{"delMarks", ",", " ", "2"}], "]"}], "\[Equal]", "0"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"looper", " ", "=", " ", "False"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"checkImg", " ", "=", " ", "imgData"}], ";"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
       ",", "Infinity"}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "imgData", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7299370750980587`*^9, 3.7299371330661707`*^9}, {
   3.72993741783038*^9, 3.729937419261153*^9}, {3.729937462428698*^9, 
   3.729937479707039*^9}, {3.729937513890649*^9, 3.7299375252089367`*^9}, {
   3.729938146360002*^9, 3.729938153382545*^9}, {3.7299382120203743`*^9, 
   3.7299382293085127`*^9}, {3.729938286027729*^9, 3.729938297737829*^9}, {
   3.729938336721736*^9, 3.7299383482175426`*^9}, {3.729938382160235*^9, 
   3.729938408707456*^9}, {3.72993845230986*^9, 3.729938525929439*^9}, {
   3.729939250581472*^9, 3.729939429692819*^9}, {3.729939615278203*^9, 
   3.7299396545881863`*^9}, {3.729939775535709*^9, 3.7299398293975697`*^9}, {
   3.729939892010297*^9, 3.729939913097457*^9}, 3.7299401375226793`*^9, {
   3.729940261876339*^9, 3.7299402621234083`*^9}, {3.729940411846442*^9, 
   3.729940554808783*^9}, {3.729967840526326*^9, 3.729968039012451*^9}, {
   3.729968230915793*^9, 3.729968246346777*^9}, {3.729968500538773*^9, 
   3.729968515504389*^9}, {3.729968562761517*^9, 3.7299685689981127`*^9}, {
   3.729968669148037*^9, 3.729968677617887*^9}, {3.729968767616345*^9, 
   3.72996878733309*^9}, {3.729968824173997*^9, 3.729968830315879*^9}, {
   3.729968917680784*^9, 3.729969174304369*^9}, {3.729969247892302*^9, 
   3.729969276722918*^9}, {3.729969307329632*^9, 3.729969326217114*^9}, {
   3.729969363015024*^9, 3.7299693654312468`*^9}, {3.729969415862423*^9, 
   3.7299694281726217`*^9}, {3.729969461013288*^9, 3.729969541888501*^9}, {
   3.729969678028648*^9, 3.729969687234655*^9}, {3.729969731218411*^9, 
   3.729969740440342*^9}, 3.7299698625018787`*^9, {3.7299700351263657`*^9, 
   3.729970050886199*^9}, {3.729970095572448*^9, 3.7299701209951143`*^9}, 
   3.729970345779626*^9, {3.729970639254621*^9, 3.729970655548401*^9}, {
   3.72997071985102*^9, 3.729970742760633*^9}, {3.7299707936397867`*^9, 
   3.729970900978891*^9}, {3.7299710340782213`*^9, 3.7299710810372877`*^9}, {
   3.729971113085368*^9, 3.7299711237947693`*^9}, {3.729971378121237*^9, 
   3.729971406207457*^9}, 3.7299716289684668`*^9, {3.7299734241606894`*^9, 
   3.729973439023654*^9}, {3.729973473480055*^9, 3.729973484757977*^9}, {
   3.729973879337241*^9, 3.7299738798309298`*^9}, {3.729975167468223*^9, 
   3.7299751741081257`*^9}, {3.729975223602962*^9, 
   3.729975223722419*^9}},ExpressionUUID->"e5f0fb8c-a5e0-4596-a6c5-\
0654116aaf56"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.729972928522305*^9, 3.729973031636231*^9}, {
   3.7299731782720346`*^9, 3.729973216885152*^9}, {3.72997356815209*^9, 
   3.729973733185116*^9}, {3.729973797962894*^9, 3.7299738155682507`*^9}, 
   3.729975580868374*^9},ExpressionUUID->"974097e4-51ca-4ceb-95ba-\
52d364681537"],

Cell[CellGroupData[{

Cell["Neighbours Functions", "Subsubsection",
 CellChangeTimes->{{3.72994142909186*^9, 
  3.729941452002673*^9}},ExpressionUUID->"a9c4b217-68c9-4cd4-abcc-\
df87f3a7519e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"neighbours4", "[", "imgInput_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"array", " ", "=", " ", "imgInput"}], ",", " ", "nCount", ",", 
       
       RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
       RowBox[{"j", " ", "=", " ", "2"}], ",", " ", "p0", ",", "p1", ",", " ",
        "p2", ",", " ", "p3", ",", " ", "values", ",", " ", "rule"}], "}"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p0", " ", "=", " ", 
       RowBox[{"array", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", " ", "+", " ", "1"}], ",", " ", "j"}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"p1", " ", "=", " ", 
       RowBox[{"array", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "j"}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"p2", " ", "=", " ", 
       RowBox[{"array", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", 
          RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", " ", "=", 
       RowBox[{"array", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", 
          RowBox[{"j", "-", "1"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"values", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"p0", ",", " ", "p1", ",", " ", "p2", ",", " ", "p3"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rule", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", "\[Rule]", "1"}], ",", " ", 
         RowBox[{"1", "\[Rule]", "0"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nCount", " ", "=", " ", 
       RowBox[{"Total", "[", 
        RowBox[{"values", " ", "/.", " ", "rule"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "nCount", "]"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neighbours6", "[", "imgInput_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"array", " ", "=", " ", "imgInput"}], ",", " ", "nCount", ",", 
       
       RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
       RowBox[{"j", " ", "=", " ", "2"}], ",", " ", "p0", ",", "p1", ",", " ",
        "p2", ",", " ", "p3", ",", " ", "p4", ",", " ", "p5", ",", " ", "p6", 
       ",", " ", "values", ",", " ", "rule"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p0", " ", "=", " ", 
       RowBox[{"array", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "j"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p1", " ", "=", " ", 
       RowBox[{"array", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", " ", "+", " ", "1"}], ",", " ", "j"}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"p2", " ", "=", " ", 
       RowBox[{"array", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "j"}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"p3", " ", "=", " ", 
       RowBox[{"array", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", 
          RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p4", " ", "=", 
       RowBox[{"array", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", 
          RowBox[{"j", "-", "1"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p5", " ", "=", " ", 
       RowBox[{"array", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", "+", "1"}], " ", ",", " ", 
          RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p6", " ", "=", " ", 
       RowBox[{"array", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", " ", "-", "1"}], ",", " ", 
          RowBox[{"j", "-", "1"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"values", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "p1", ",", " ", "p2", ",", " ", "p3", ",", " ", "p4", ",", " ", "p5", 
         ",", " ", "p6"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rule", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", "\[Rule]", "1"}], ",", " ", 
         RowBox[{"1", "\[Rule]", "0"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nCount", " ", "=", " ", 
       RowBox[{"Total", "[", 
        RowBox[{"values", " ", "/.", " ", "rule"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "nCount", "]"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"neighbours8", "[", "imgInput_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"array", " ", "=", " ", "imgInput"}], ",", " ", "nCount", ",", 
      RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
      RowBox[{"j", " ", "=", " ", "2"}], ",", " ", "p0", ",", "p1", ",", " ", 
      "p2", ",", " ", "p3", ",", " ", "p4", ",", " ", "p5", ",", " ", "p6", 
      ",", " ", "p7", ",", " ", "p8", ",", " ", "values", ",", " ", "rule"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p0", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", " ", "j"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p1", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", " ", 
         RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", " ", 
         RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p3", " ", "=", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", " ", "j"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p4", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", " ", "-", "1"}], ",", " ", 
         RowBox[{"j", "-", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p5", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{"i", " ", ",", " ", 
         RowBox[{"j", "-", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p6", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", " ", "+", "1"}], ",", " ", 
         RowBox[{"j", "-", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p7", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", "+", "1"}], ",", " ", "j"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p8", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", "+", "1"}], ",", " ", 
         RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"values", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "p1", ",", " ", "p2", ",", " ", "p3", ",", " ", "p4", ",", " ", "p5", 
        ",", " ", "p6", ",", " ", "p7", ",", " ", "p8"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rule", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "\[Rule]", "1"}], ",", " ", 
        RowBox[{"1", "\[Rule]", "0"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"nCount", " ", "=", " ", 
      RowBox[{"Total", "[", 
       RowBox[{"values", " ", "/.", " ", "rule"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "nCount", "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7299385336928596`*^9, 3.729938607956895*^9}, {
  3.729938655876462*^9, 3.729938702750327*^9}, {3.72993882777462*^9, 
  3.729938915986162*^9}, {3.729938981849619*^9, 3.729939056548703*^9}, {
  3.729939089237671*^9, 3.729939095035184*^9}, {3.729939728298106*^9, 
  3.72993973098567*^9}, {3.729940124659276*^9, 3.729940248886162*^9}, {
  3.729940292829447*^9, 
  3.729940391832604*^9}},ExpressionUUID->"cbb73c45-5811-480c-82d1-\
cdccdb20d575"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Preprocessing for Necking", "Subsection",
 CellChangeTimes->{{3.7299414933614607`*^9, 
  3.729941497881164*^9}},ExpressionUUID->"fa4b7faa-abb5-44c7-ac06-\
4ee8b99aadb1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"preprocessingN", "[", "imgInput_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"imgData", " ", "=", " ", "imgInput"}], ",", " ", "rows", ",", 
      " ", "columns", ",", " ", "template", ",", "D1", ",", " ", "D2", ",", 
      " ", "D3", ",", " ", "D4", ",", " ", "D5", ",", " ", "U1", ",", " ", 
      "U2", ",", " ", "U3", ",", " ", "U4", ",", " ", "U5", ",", "origWindow",
       ",", " ", "window", ",", " ", "templateSame", ",", " ", "imgProcess", 
      ",", " ", "rule", ",", " ", "onDelete", ",", " ", "onRepeat", ",", 
      "delMarks", ",", " ", "ind1", ",", " ", "ind2"}], "}"}], ",", " ", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"D1", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "0", ",", " ", "1", ",", " ", "0", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "0", ",", " ", "1", ",", " ", "0", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", " ", "0", ",", " ", "0", ",", " ", "0", 
          ",", " ", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"D2", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "1", ",", " ", "1", ",", " ", "0", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "0", ",", " ", "1", ",", " ", "0", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", " ", "0", ",", " ", "0", ",", " ", "0", 
          ",", " ", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"D3", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "0", ",", " ", "1", ",", " ", "1", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "0", ",", " ", "1", ",", " ", "0", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", " ", "0", ",", " ", "0", ",", " ", "0", 
          ",", " ", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"D4", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "1", ",", " ", "1", ",", " ", "0", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "1", ",", " ", "1", ",", " ", "0", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", " ", "0", ",", " ", "0", ",", " ", "0", 
          ",", " ", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"D5", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "0", ",", " ", "1", ",", " ", "1", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "0", ",", " ", "1", ",", " ", "1", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", " ", "0", ",", " ", "0", ",", " ", "0", 
          ",", " ", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"rule", "  ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "\[Rule]", "1"}], ",", " ", 
        RowBox[{"1", "\[Rule]", "0"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"U1", " ", "=", " ", 
      RowBox[{"D1", " ", "/.", " ", "rule"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"U2", " ", "=", " ", 
      RowBox[{"D2", " ", "/.", " ", "rule"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"U3", " ", "=", " ", 
      RowBox[{"D3", " ", "/.", " ", "rule"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"U4", " ", "=", " ", 
      RowBox[{"D4", " ", "/.", " ", "rule"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"U5", " ", "=", " ", 
      RowBox[{"D5", " ", "/.", " ", "rule"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rows", ",", " ", "columns"}], "}"}], " ", "=", " ", 
      RowBox[{"Dimensions", "[", "imgData", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"imgProcess", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "rows"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "columns"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"templateSame", " ", "=", " ", "False"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"onDelete", " ", "=", " ", "True"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"onRepeat", " ", "=", " ", "False"}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
         "onDelete", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"onDelete", " ", "=", " ", "False"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"template", " ", "=", " ", "k"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"i", " ", "=", " ", "3"}], ",", " ", 
                RowBox[{"i", " ", "\[LessEqual]", " ", 
                 RowBox[{"rows", "-", "2"}]}], ",", " ", 
                RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"j", " ", "=", " ", "3"}], ",", " ", 
                   RowBox[{"j", "\[LessEqual]", " ", 
                    RowBox[{"columns", "-", "2"}]}], ",", " ", 
                   RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"origWindow", " ", "=", " ", 
                    RowBox[{"imgData", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"i", "-", "2"}], ";;", 
                    RowBox[{"i", "+", "2"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"j", "-", "2"}], ";;", 
                    RowBox[{"j", "+", "2"}]}]}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"window", " ", "=", "origWindow"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    "Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"imgProcess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "\[Equal]", 
                    "0"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"l", " ", "\[Equal]", "2"}], ",", 
                    RowBox[{"window", " ", "=", 
                    RowBox[{"rotateTemplate", "[", 
                    RowBox[{"origWindow", ",", " ", "1"}], "]"}]}]}], "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"l", " ", "\[Equal]", "3"}], ",", 
                    RowBox[{"window", " ", "=", 
                    RowBox[{"rotateTemplate", "[", 
                    RowBox[{"origWindow", ",", " ", "2"}], "]"}]}]}], "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"l", " ", "\[Equal]", "4"}], ",", 
                    RowBox[{"window", " ", "=", 
                    RowBox[{"rotateTemplate", "[", 
                    RowBox[{"origWindow", ",", " ", "3"}], "]"}]}]}], "]"}], 
                    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"window", "[", 
                    RowBox[{"[", 
                    RowBox[{"5", ",", " ", "1"}], "]"}], "]"}], " ", "=", " ", 
                    RowBox[{"-", "1"}]}], ";", " ", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"window", "[", 
                    RowBox[{"[", 
                    RowBox[{"5", ",", " ", "5"}], "]"}], "]"}], " ", "=", " ", 
                    RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"template", " ", "\[Equal]", " ", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"templateSame", " ", "=", " ", 
                    RowBox[{"window", " ", "\[Equal]", " ", "D1"}]}], ";"}]}],
                     "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"template", " ", "\[Equal]", " ", "2"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"templateSame", " ", "=", " ", 
                    RowBox[{"window", " ", "\[Equal]", " ", "D2"}]}], ";"}]}],
                     "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"template", " ", "\[Equal]", " ", "3"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"templateSame", " ", "=", " ", 
                    RowBox[{"window", " ", "\[Equal]", " ", "D3"}]}], ";"}]}],
                     "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"And", "[", 
                    RowBox[{
                    RowBox[{"template", " ", "\[Equal]", " ", "4"}], ",", " ", 
                    RowBox[{"Not", "[", "onRepeat", "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"templateSame", " ", "=", " ", 
                    RowBox[{"window", " ", "\[Equal]", " ", "D4"}]}], ";"}]}],
                     "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"And", "[", 
                    RowBox[{
                    RowBox[{"template", " ", "\[Equal]", " ", "5"}], ",", " ", 
                    RowBox[{"Not", "[", "onRepeat", "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"templateSame", " ", "=", " ", 
                    RowBox[{"window", " ", "\[Equal]", " ", "D5"}]}], ";"}]}],
                     "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"template", " ", "\[Equal]", " ", "6"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"templateSame", " ", "=", " ", 
                    RowBox[{"window", " ", "\[Equal]", " ", "U1"}]}], ";"}]}],
                     "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"template", " ", "\[Equal]", " ", "7"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"templateSame", " ", "=", " ", 
                    RowBox[{"window", " ", "\[Equal]", " ", "U2"}]}], ";"}]}],
                     "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"template", " ", "\[Equal]", " ", "8"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"templateSame", " ", "=", " ", 
                    RowBox[{"window", " ", "\[Equal]", " ", "U3"}]}], ";"}]}],
                     "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"And", "[", 
                    RowBox[{
                    RowBox[{"template", " ", "\[Equal]", " ", "9"}], ",", " ", 
                    RowBox[{"Not", "[", "onRepeat", "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"templateSame", " ", "=", " ", 
                    RowBox[{"window", " ", "\[Equal]", " ", "U4"}]}], ";"}]}],
                     "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"And", "[", 
                    RowBox[{
                    RowBox[{"template", " ", "\[Equal]", " ", "10"}], ",", 
                    " ", 
                    RowBox[{"Not", "[", "onRepeat", "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"templateSame", " ", "=", " ", 
                    RowBox[{"window", " ", "\[Equal]", " ", "U5"}]}], ";"}]}],
                     "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
                     "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"And", "[", 
                    RowBox[{"templateSame", ",", " ", 
                    RowBox[{
                    RowBox[{"imgData", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "\[Equal]", 
                    "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"imgProcess", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "=", "1"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"onDelete", "=", " ", "True"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"templateSame", " ", "=", " ", "False"}], ";"}]}],
                     "\[IndentingNewLine]", "]"}], ";"}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", ",", " ", 
                    RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], 
                    "\[IndentingNewLine]", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"l", ",", " ", "1", ",", " ", "4"}], "}"}]}], 
                    "]"}], ";"}]}], "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
             "\[IndentingNewLine]", ",", " ", 
             RowBox[{"{", 
              RowBox[{"k", ",", " ", "1", ",", " ", "10"}], "}"}]}], "]"}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"delMarks", " ", "=", " ", 
            RowBox[{"Position", "[", 
             RowBox[{"imgProcess", ",", " ", "1"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"ind1", ",", " ", "ind2"}], "}"}], " ", "=", " ", 
               RowBox[{"delMarks", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              
              RowBox[{
               RowBox[{"imgData", "[", 
                RowBox[{"[", 
                 RowBox[{"ind1", ",", " ", "ind2"}], "]"}], "]"}], " ", "=", 
               " ", "1"}], ";"}], "\[IndentingNewLine]", ",", " ", 
             RowBox[{"{", 
              RowBox[{"i", ",", " ", 
               RowBox[{"Length", "[", "delMarks", "]"}]}], "}"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "delMarks", "]"}], "\[Equal]", "0"}], 
             ",", " ", 
             RowBox[{"onDelete", " ", "=", " ", "False"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"imgProcess", " ", "=", " ", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "rows"}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "columns"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"onRepeat", " ", "=", " ", "True"}], ";"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
       ",", "Infinity"}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "imgData", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.729942107528637*^9, 3.729942235297415*^9}, {
   3.72994229363908*^9, 3.7299423891156263`*^9}, {3.729942437817684*^9, 
   3.729942536566017*^9}, {3.729942567596651*^9, 3.7299425815800257`*^9}, {
   3.729942621940015*^9, 3.7299426617371893`*^9}, {3.7299427026874323`*^9, 
   3.729942741136372*^9}, {3.729942866737235*^9, 3.729942969717881*^9}, {
   3.7299430146518707`*^9, 3.7299431963816023`*^9}, {3.729943267939804*^9, 
   3.729943275370328*^9}, {3.729943310586472*^9, 3.729943400790357*^9}, {
   3.729943431453162*^9, 3.729943441684561*^9}, {3.729943563968555*^9, 
   3.7299435686493187`*^9}, {3.7299436073110657`*^9, 3.729943788843728*^9}, {
   3.729943842428905*^9, 3.729943869836259*^9}, {3.7299439439525023`*^9, 
   3.729943959233387*^9}, {3.729943990789906*^9, 3.7299441395937223`*^9}, {
   3.729944170267177*^9, 3.7299442209016533`*^9}, {3.72994434567316*^9, 
   3.729944402243011*^9}, {3.729944920395382*^9, 3.729944927687807*^9}, {
   3.729944977120284*^9, 3.7299450161581907`*^9}, {3.72994506606166*^9, 
   3.729945066225713*^9}, {3.729945143195293*^9, 3.729945174525725*^9}, {
   3.729945258237001*^9, 3.729945339849287*^9}, {3.7299453732247047`*^9, 
   3.729945425166881*^9}, {3.729945612659919*^9, 3.729945683006427*^9}, {
   3.7299457425535707`*^9, 3.729945793473145*^9}, {3.729945906630126*^9, 
   3.72994591886003*^9}, {3.7299459648990183`*^9, 3.7299460045250673`*^9}, {
   3.729946114907445*^9, 3.72994611608284*^9}, {3.729946183408566*^9, 
   3.729946189678783*^9}, {3.729946320396199*^9, 3.729946323801413*^9}, {
   3.729946484230382*^9, 3.72994648458876*^9}, {3.72994715629007*^9, 
   3.729947241261806*^9}, {3.7299473754174147`*^9, 3.729947411718993*^9}, {
   3.7299475147593946`*^9, 3.729947567131235*^9}, {3.729947639826075*^9, 
   3.729947653752207*^9}, {3.729947720158992*^9, 3.72994776507267*^9}, {
   3.729947823420474*^9, 3.729947856254813*^9}, {3.729947910003168*^9, 
   3.7299479169312897`*^9}, {3.729947949709499*^9, 3.729947999898114*^9}, {
   3.729948078750412*^9, 3.7299480804850397`*^9}, {3.729948317348215*^9, 
   3.729948387386552*^9}, {3.729948435227426*^9, 3.72994850703094*^9}, {
   3.729948540967518*^9, 3.729948578233889*^9}, {3.729948613108296*^9, 
   3.729948647438966*^9}, {3.7299487546764183`*^9, 3.729948825225519*^9}, {
   3.729949014003034*^9, 3.729949150363585*^9}, {3.7299492630890083`*^9, 
   3.729949288527804*^9}, {3.7299494591653843`*^9, 3.7299494816304417`*^9}, {
   3.729949660438476*^9, 3.729949708262909*^9}, {3.729949781308256*^9, 
   3.729949840240185*^9}, {3.729949894417889*^9, 3.729949909935891*^9}, {
   3.729949944815956*^9, 3.729949949453134*^9}, {3.729950208193701*^9, 
   3.729950278287273*^9}, {3.729950516572692*^9, 3.729950547779503*^9}, {
   3.7299508224281893`*^9, 3.7299508791841087`*^9}, {3.729951816891789*^9, 
   3.729951960118745*^9}, {3.729952088477005*^9, 3.729952099875732*^9}, {
   3.729952289393671*^9, 3.729952296537067*^9}, {3.7299523480017347`*^9, 
   3.729952388365499*^9}, {3.7299524247489967`*^9, 3.729952440148425*^9}, {
   3.729952488455166*^9, 3.7299524917794743`*^9}, {3.729952659269315*^9, 
   3.7299527747607203`*^9}, {3.729953910549988*^9, 3.729953917483118*^9}, {
   3.729954554369775*^9, 3.7299545558416853`*^9}, {3.729954907412842*^9, 
   3.729954908131119*^9}, {3.7299717064262867`*^9, 3.729971766812964*^9}, {
   3.729971799312812*^9, 3.7299718473625383`*^9}, {3.729971892669845*^9, 
   3.729971906091549*^9}, {3.729971948593001*^9, 3.7299719762545633`*^9}, {
   3.729972045331839*^9, 3.7299720620035887`*^9}, {3.72997213945574*^9, 
   3.729972150710926*^9}, {3.729972254852832*^9, 3.7299722550434113`*^9}, {
   3.729972363322022*^9, 3.729972506834585*^9}, {3.729972556985734*^9, 
   3.7299725626557837`*^9}, {3.729972601765439*^9, 3.729972674524006*^9}, {
   3.729972714266987*^9, 3.72997272596102*^9}, {3.7299732836509943`*^9, 
   3.729973285089943*^9}, {3.729973956825844*^9, 3.729974048572865*^9}, {
   3.729974142241151*^9, 3.72997415272052*^9}, {3.729974248363853*^9, 
   3.7299742523430777`*^9}, {3.729974322947505*^9, 3.729974345201364*^9}, {
   3.729974422495886*^9, 3.729974422695106*^9}, {3.729974648853634*^9, 
   3.729974655770981*^9}, {3.729974698422888*^9, 3.7299746984678698`*^9}, {
   3.729975816209527*^9, 3.7299758187192087`*^9}, {3.7299758756866493`*^9, 
   3.729975905445527*^9}, {3.7299762507615623`*^9, 3.7299762561743107`*^9}, {
   3.7299764412494307`*^9, 3.7299764475667553`*^9}, {3.7299766003864*^9, 
   3.729976613409213*^9}, {3.72997667225882*^9, 3.7299766846951303`*^9}, {
   3.729976840830076*^9, 3.729976841146385*^9}, {3.7299783493512*^9, 
   3.729978356029874*^9}, 
   3.729979609288658*^9},ExpressionUUID->"848b8899-5840-4047-ae2e-\
e642dd98ebc6"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.729972751236389*^9, 3.72997281997278*^9}, {
   3.729972855564863*^9, 3.729972855971327*^9}, {3.729973313652131*^9, 
   3.7299733194902153`*^9}, {3.729974058303752*^9, 3.729974065276231*^9}, {
   3.7299741667391777`*^9, 3.729974193007205*^9}, {3.729974366772847*^9, 
   3.729974383863537*^9}, {3.729974455265395*^9, 3.729974496469038*^9}, {
   3.7299745289170437`*^9, 3.7299745792886763`*^9}, {3.729974668878149*^9, 
   3.729974670972479*^9}, {3.729974758262089*^9, 3.7299747593531227`*^9}, {
   3.729974825450742*^9, 3.7299748849487867`*^9}, {3.7299750750887213`*^9, 
   3.729975105837269*^9}, {3.7299751365577908`*^9, 3.729975141154202*^9}, {
   3.7299751990270863`*^9, 3.729975212720155*^9}, {3.729975425770196*^9, 
   3.729975478156372*^9}, 
   3.729975586921771*^9},ExpressionUUID->"b3b76ab3-ae7c-4e7e-83f8-\
667e1e39a3c3"],

Cell[CellGroupData[{

Cell["Rotate Template Function", "Subsubsection",
 CellChangeTimes->{{3.729953860267766*^9, 
  3.729953876690694*^9}},ExpressionUUID->"6aebf794-defd-4edb-a98a-\
4266965244c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rotateTemplate", "[", 
   RowBox[{"matrix_", ",", " ", "type_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", " ", "=", " ", "matrix"}], "}"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"type", "\[Equal]", "1"}], ",", " ", 
       RowBox[{"Return", "[", 
        RowBox[{"Reverse", "[", 
         RowBox[{
          RowBox[{"a", "\[Transpose]"}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"type", "\[Equal]", "2"}], ",", " ", 
       RowBox[{"Return", "[", 
        RowBox[{"Reverse", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"type", " ", "\[Equal]", "3"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{
         RowBox[{"Reverse", "[", 
          RowBox[{"a", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], "\[Transpose]"}], "]"}]}], "]"}],
      ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7299511257374268`*^9, 3.7299511257390623`*^9}, {
  3.729951200574687*^9, 3.7299513031844997`*^9}, {3.7299514265100594`*^9, 
  3.729951565254423*^9}, {3.7299516011340427`*^9, 
  3.7299516209561443`*^9}},ExpressionUUID->"ff68aa66-1bd5-4f0f-a8b5-\
60ab02be17e2"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.7299651862150717`*^9},ExpressionUUID->"a6f59af4-1683-4215-a6d9-\
2480771917fe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Zhang-Suen Algorithm", "Section",
 CellChangeTimes->{{3.7299570980294523`*^9, 
  3.729957105203622*^9}},ExpressionUUID->"2b276624-0114-483f-923d-\
7cc73553d680"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"zhangSuen", "[", "imgInput_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"imgData", " ", "=", " ", "imgInput"}], ",", " ", 
       "imgProcessed", ",", " ", "rows", ",", " ", "columns", ",", " ", 
       "conNum", ",", " ", "window", ",", " ", "delMarks", ",", " ", "ind1", 
       ",", " ", "ind2", ",", " ", 
       RowBox[{"looper", "=", "True"}], ",", " ", "checkImg"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rows", ",", " ", "columns"}], "}"}], " ", "=", " ", 
       RowBox[{"Dimensions", "[", "imgData", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"looper", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"imgProcessed", " ", "=", " ", 
                RowBox[{"Table", "[", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", " ", "rows"}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", " ", "columns"}], "}"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
                 RowBox[{"i", " ", "\[LessEqual]", " ", 
                  RowBox[{"rows", "-", "1"}]}], ",", " ", 
                 RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"j", " ", "=", " ", "2"}], ",", " ", 
                    RowBox[{"j", "\[LessEqual]", " ", 
                    RowBox[{"columns", "-", "1"}]}], ",", " ", 
                    RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", " ", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"window", " ", "=", 
                    RowBox[{"imgData", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ";;", 
                    RowBox[{"i", "+", "1"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"j", "-", "1"}], ";;", 
                    RowBox[{"j", "+", "1"}]}]}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"conNum", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"connectivity", "[", "window", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"And", "[", 
                    RowBox[{
                    RowBox[{"conNum", " ", "\[Equal]", " ", "1"}], ",", " ", 
                    RowBox[{"critNeighbours", "[", "window", "]"}], ",", " ", 
                    
                    RowBox[{"critBack", "[", 
                    RowBox[{"window", ",", " ", "l"}], "]"}], ",", " ", 
                    RowBox[{
                    RowBox[{"imgData", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "\[Equal]", 
                    "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"imgProcessed", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "=", "1"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"delMarks", " ", "=", " ", 
                RowBox[{"Position", "[", 
                 RowBox[{"imgProcessed", ",", " ", "1"}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"Do", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"ind1", ",", " ", "ind2"}], "}"}], "=", 
                   RowBox[{"delMarks", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"imgData", "[", 
                    RowBox[{"[", 
                    RowBox[{"ind1", ",", " ", "ind2"}], "]"}], "]"}], "=", 
                   "1"}], ";"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", 
                   RowBox[{"Length", "[", "delMarks", "]"}]}], "}"}]}], 
                "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"l", ",", " ", "1", ",", " ", "2"}], "}"}]}], "]"}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"checkImg", "\[Equal]", " ", "imgData"}], ",", " ", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"looper", " ", "=", " ", "False"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"checkImg", " ", "=", " ", "imgData"}], ";"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
           RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], "\[IndentingNewLine]",
         ",", " ", "Infinity"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "imgData", "]"}], ";"}]}], "\[IndentingNewLine]",
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.729962448276149*^9, 3.729962596938534*^9}, {
   3.729962709095777*^9, 3.729962742445202*^9}, {3.729962813948296*^9, 
   3.729962933198147*^9}, {3.729963932711145*^9, 3.729964177676867*^9}, 
   3.729964210043646*^9, {3.729964318088788*^9, 3.729964530607277*^9}, {
   3.7299645653505583`*^9, 3.7299645945727663`*^9}, {3.729964840972147*^9, 
   3.729964870756302*^9}, {3.729965000461164*^9, 3.729965017644849*^9}, {
   3.729965070669023*^9, 3.7299650868184443`*^9}, {3.729965220956705*^9, 
   3.7299652211872797`*^9}, {3.729965862036468*^9, 3.729966050931664*^9}, {
   3.729966231562458*^9, 3.7299662430810432`*^9}, {3.729966317282612*^9, 
   3.7299664214916553`*^9}, {3.729966518146738*^9, 3.729966624779831*^9}, {
   3.729966698147958*^9, 3.729966759127941*^9}, {3.7299704033022537`*^9, 
   3.729970411510208*^9}, {3.729970481157305*^9, 
   3.7299704815794773`*^9}},ExpressionUUID->"35eddbff-48ac-40ab-90ec-\
b84ecca0dd22"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"critNeighbours", "[", "imgInput_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"imgData", " ", "=", " ", "imgInput"}], ",", " ", "imgCrit"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"imgCrit", " ", "=", " ", 
      RowBox[{"And", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"neighbours8", "[", "imgData", "]"}], " ", "\[GreaterEqual]",
          " ", "2"}], ",", " ", 
        RowBox[{
         RowBox[{"neighbours8", "[", "imgData", "]"}], " ", "\[LessEqual]", 
         " ", "6"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"critBack", "[", 
   RowBox[{"imgInput_", ",", " ", "version_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"imgData", " ", "=", " ", "imgInput"}], ",", " ", "imgCrit", 
      ",", " ", 
      RowBox[{"i", "=", "2"}], ",", " ", 
      RowBox[{"j", "=", "2"}], ",", "p0", ",", " ", "p1", ",", " ", "p2", ",",
       " ", "p3", ",", " ", "p4", ",", " ", "values1", ",", " ", "values2"}], 
     "}"}], ",", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p0", " ", "=", " ", 
      RowBox[{"imgData", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", " ", "j"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p1", " ", "=", 
      RowBox[{"imgData", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", " ", "j"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2", " ", "=", " ", 
      RowBox[{"imgData", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", " ", 
         RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p3", " ", "=", " ", 
      RowBox[{"imgData", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", "+", "1"}], ",", " ", "j"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p4", " ", "=", " ", 
      RowBox[{"imgData", "[", 
       RowBox[{"[", 
        RowBox[{"i", " ", ",", " ", 
         RowBox[{"j", "-", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"version", " ", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"values1", " ", "=", "\[NonBreakingSpace]", 
         RowBox[{"{", 
          RowBox[{"p1", ",", " ", "p2", ",", " ", "p3"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"values2", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"p2", ",", " ", "p3", ",", " ", "p4"}], "}"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"version", " ", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"values1", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"p2", ",", " ", "p1", ",", " ", "p4"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"values2", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"p1", ",", " ", "p3", ",", " ", "p4"}], "}"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"imgCrit", " ", "=", " ", 
      RowBox[{"And", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", "values1", "]"}], "\[GreaterEqual]", "1"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"Total", "[", "values2", "]"}], "\[GreaterEqual]", " ", 
         "1"}]}], "]"}]}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.729962958430668*^9, 3.729963266416201*^9}, {
  3.729963301941249*^9, 3.729963313888793*^9}, {3.729963344287798*^9, 
  3.729963422986528*^9}, {3.729963462728878*^9, 3.7299635250885353`*^9}, {
  3.7299635635647717`*^9, 3.729963754959236*^9}, {3.729963802758045*^9, 
  3.729963913465576*^9}, {3.729964806934524*^9, 
  3.72996481064435*^9}},ExpressionUUID->"2c1fc8fd-9691-416a-b836-\
adb66dcdf703"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7299772132540913`*^9, 3.72997743757796*^9}, {
   3.729977517272928*^9, 3.729977764841975*^9}, {3.729977842912342*^9, 
   3.7299778445645523`*^9}, {3.7299778754116163`*^9, 3.729977947157269*^9}, {
   3.729978123910026*^9, 3.7299781969110394`*^9}, {3.729978287815763*^9, 
   3.729978290507449*^9}, {3.7299783702879257`*^9, 3.729978371101709*^9}, 
   3.7299791002220287`*^9},ExpressionUUID->"f3e3f620-4747-42a3-b1f8-\
48bb83796694"],

Cell[CellGroupData[{

Cell["Staircase Removal", "Subsection",
 CellChangeTimes->{{3.730034443382319*^9, 
  3.7300344466403227`*^9}},ExpressionUUID->"ce4ca4d6-ef44-4b39-a1ca-\
f4fbcc7b50f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"staircaseRm", "[", "imgInput_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"imgData", " ", "=", " ", "imgInput"}], ",", " ", 
       "imgProcessed", ",", " ", "rows", ",", " ", "columns", ",", " ", 
       "conNum", ",", " ", "window", ",", " ", "delMarks", ",", " ", "ind1", 
       ",", " ", "ind2", ",", " ", 
       RowBox[{"looper", "=", "True"}], ",", " ", "checkImg"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rows", ",", " ", "columns"}], "}"}], " ", "=", " ", 
       RowBox[{"Dimensions", "[", "imgData", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"looper", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"imgProcessed", " ", "=", " ", 
                RowBox[{"Table", "[", 
                 RowBox[{"0", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", " ", "rows"}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", " ", "columns"}], "}"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
                 RowBox[{"i", " ", "\[LessEqual]", " ", 
                  RowBox[{"rows", "-", "1"}]}], ",", " ", 
                 RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"j", " ", "=", " ", "2"}], ",", " ", 
                    RowBox[{"j", "\[LessEqual]", " ", 
                    RowBox[{"columns", "-", "1"}]}], ",", " ", 
                    RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", " ", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"window", " ", "=", 
                    RowBox[{"imgData", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ";;", 
                    RowBox[{"i", "+", "1"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"j", "-", "1"}], ";;", 
                    RowBox[{"j", "+", "1"}]}]}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"l", " ", "==", "1"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"And", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"critHolt", "[", 
                    RowBox[{"window", ",", " ", "l"}], "]"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"imgData", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "\[Equal]", 
                    "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"imgProcessed", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "=", "1"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"l", " ", "\[Equal]", "2"}], ",", " ", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"And", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"critHolt", "[", 
                    RowBox[{"window", ",", " ", "l"}], "]"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"imgData", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "\[Equal]", 
                    "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"imgProcessed", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "=", "1"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
                  ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"delMarks", " ", "=", " ", 
                RowBox[{"Position", "[", 
                 RowBox[{"imgProcessed", ",", " ", "1"}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"Do", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"ind1", ",", " ", "ind2"}], "}"}], "=", 
                   RowBox[{"delMarks", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"imgData", "[", 
                    RowBox[{"[", 
                    RowBox[{"ind1", ",", " ", "ind2"}], "]"}], "]"}], "=", 
                   "1"}], ";"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", 
                   RowBox[{"Length", "[", "delMarks", "]"}]}], "}"}]}], 
                "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"l", ",", " ", "1", ",", " ", "2"}], "}"}]}], "]"}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"checkImg", "\[Equal]", " ", "imgData"}], ",", " ", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"looper", " ", "=", " ", "False"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"checkImg", " ", "=", " ", "imgData"}], ";"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
           RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], "\[IndentingNewLine]",
         ",", " ", "Infinity"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "imgData", "]"}], ";"}]}], "\[IndentingNewLine]",
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7300356558632793`*^9, 3.730035668948386*^9}, {
  3.730035912464044*^9, 3.730035969074239*^9}, {3.730036038723071*^9, 
  3.730036120909246*^9}, {3.730036232497574*^9, 3.7300362375689573`*^9}, {
  3.7300380878620033`*^9, 3.730038105594998*^9}, {3.7300382500228653`*^9, 
  3.730038256564905*^9}, {3.730038431870489*^9, 3.730038445134359*^9}, {
  3.7300386480804367`*^9, 3.730038648358301*^9}, {3.730038871374671*^9, 
  3.730038873069688*^9}, {3.7300394132760057`*^9, 3.730039417961844*^9}, {
  3.7300403053300247`*^9, 
  3.730040305551469*^9}},ExpressionUUID->"ac149826-20b9-497e-aab6-\
0c6a7d33b9ad"],

Cell[CellGroupData[{

Cell["Criterion / Condition for Pixel Survival Function", "Subsubsection",
 CellChangeTimes->{{3.730039761953908*^9, 
  3.730039783937666*^9}},ExpressionUUID->"623db9a2-9d0f-415f-ab46-\
b7d99be5630c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"critHolt", "[", 
    RowBox[{"imgInput_", ",", " ", "version_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"imgData", " ", "=", " ", "imgInput"}], ",", " ", 
       RowBox[{"i", "=", "2"}], ",", " ", 
       RowBox[{"j", "=", "2"}], ",", " ", "c", ",", " ", "e", ",", " ", "ne", 
       ",", " ", "n", ",", " ", "nw", ",", " ", "w", ",", " ", "sw", ",", " ",
        "s", ",", " ", "se", ",", "rule"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rule", " ", ":=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", "\[Rule]", "True"}], ",", " ", 
         RowBox[{"1", "\[Rule]", " ", "False"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"c", " ", "=", " ", 
       RowBox[{
        RowBox[{"imgData", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "/.", " ", "rule"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"e", " ", "=", " ", 
       RowBox[{
        RowBox[{"imgData", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", 
           RowBox[{"j", "+", "1"}]}], "]"}], "]"}], " ", "/.", " ", 
        "rule"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ne", " ", "=", " ", 
       RowBox[{
        RowBox[{"imgData", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", "-", "1"}], ",", " ", 
           RowBox[{"j", "+", "1"}]}], "]"}], "]"}], " ", "/.", " ", 
        "rule"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"n", " ", "=", 
       RowBox[{
        RowBox[{"imgData", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", "-", "1"}], ",", " ", "j"}], "]"}], "]"}], "/.", " ", 
        "rule"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nw", " ", "=", " ", 
       RowBox[{
        RowBox[{"imgData", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", "1"}], ",", " ", 
           RowBox[{"j", "-", "1"}]}], "]"}], "]"}], " ", "/.", " ", 
        "rule"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"w", " ", "=", " ", 
       RowBox[{
        RowBox[{"imgData", "[", 
         RowBox[{"[", 
          RowBox[{"i", " ", ",", " ", 
           RowBox[{"j", "-", "1"}]}], "]"}], "]"}], " ", "/.", " ", 
        "rule"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sw", " ", "=", " ", 
       RowBox[{
        RowBox[{"imgData", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "+", "1"}], ",", " ", 
           RowBox[{"j", "-", "1"}]}], "]"}], "]"}], " ", "/.", " ", 
        "rule"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s", " ", "=", " ", 
       RowBox[{
        RowBox[{"imgData", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", " ", "j"}], "]"}], "]"}], " ", "/.", 
        " ", "rule"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"se", " ", "=", " ", 
       RowBox[{
        RowBox[{"imgData", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", " ", 
           RowBox[{"j", "+", "1"}]}], "]"}], "]"}], " ", "/.", " ", 
        "rule"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"version", " ", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"c", " ", "&&", " ", 
           RowBox[{"!", 
            RowBox[{"(", 
             RowBox[{"n", " ", "&&", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"e", " ", "&&", " ", 
                  RowBox[{"!", "ne"}], " ", "&&", " ", 
                  RowBox[{"!", "sw"}], " ", "&&", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"!", "w"}], " ", "||", 
                    RowBox[{"!", "s"}]}], ")"}]}], ")"}], "||", 
                RowBox[{"(", 
                 RowBox[{"w", " ", "&&", " ", 
                  RowBox[{"!", "nw"}], " ", "&&", " ", 
                  RowBox[{"!", "se"}], " ", "&&", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"!", "e"}], " ", "||", 
                    RowBox[{"!", "s"}]}], ")"}]}], ")"}]}], ")"}]}], 
             ")"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"version", " ", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"c", " ", "&&", " ", 
           RowBox[{"!", 
            RowBox[{"(", 
             RowBox[{"s", " ", "&&", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"e", " ", "&&", " ", 
                  RowBox[{"!", "se"}], " ", "&&", " ", 
                  RowBox[{"!", "nw"}], " ", "&&", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"!", "w"}], " ", "||", 
                    RowBox[{"!", "n"}]}], ")"}]}], ")"}], "||", 
                RowBox[{"(", 
                 RowBox[{"w", " ", "&&", " ", 
                  RowBox[{"!", "sw"}], " ", "&&", " ", 
                  RowBox[{"!", "ne"}], " ", "&&", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"!", "e"}], " ", "||", 
                    RowBox[{"!", "n"}]}], ")"}]}], ")"}]}], ")"}]}], 
             ")"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.730036309212846*^9, 3.730036310578916*^9}, {
  3.730036455764216*^9, 3.730036575609721*^9}, {3.730036757004601*^9, 
  3.7300368160835943`*^9}, {3.7300369758445787`*^9, 3.730037091422799*^9}, {
  3.730037122997808*^9, 3.730037275816278*^9}, {3.730037384805827*^9, 
  3.7300374933367453`*^9}, {3.7300383817266417`*^9, 3.730038406373589*^9}, {
  3.730038573125008*^9, 3.7300386063911533`*^9}, {3.730038804913783*^9, 
  3.730038807208313*^9}, {3.7300388486158943`*^9, 3.730038858286137*^9}, {
  3.730040088671489*^9, 
  3.7300400891596003`*^9}},ExpressionUUID->"c1d5f27c-eadc-49fb-a229-\
6b0e2169b826"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Force-Based Thinning", "Section",
 CellChangeTimes->{{3.730042006964314*^9, 
  3.7300420161060467`*^9}},ExpressionUUID->"674c1c01-c510-42f3-9453-\
be9304c5cbaa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cPM", "[", "imgInput_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"imgData", " ", "=", " ", "imgInput"}], ",", " ", 
      "imgProcessed", ",", " ", "rows", ",", " ", "columns", ",", " ", 
      "conNum", ",", " ", "window", ",", " ", "delMarks", ",", " ", "ind1", 
      ",", " ", "ind2", ",", " ", 
      RowBox[{"looper", "=", "True"}]}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rows", ",", " ", "columns"}], "}"}], " ", "=", " ", 
      RowBox[{"Dimensions", "[", "imgData", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
         "looper", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"imgProcessed", " ", "=", " ", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "rows"}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "columns"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
             RowBox[{"i", " ", "\[LessEqual]", " ", 
              RowBox[{"rows", "-", "1"}]}], ",", " ", 
             RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"j", " ", "=", " ", "2"}], ",", " ", 
                RowBox[{"j", "\[LessEqual]", " ", 
                 RowBox[{"columns", "-", "1"}]}], ",", " ", 
                RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", " ", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"imgData", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "\[Equal]", 
                    "0"}], ",", " ", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"window", " ", "=", 
                    RowBox[{"imgData", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ";;", 
                    RowBox[{"i", "+", "1"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"j", "-", "1"}], ";;", 
                    RowBox[{"j", "+", "1"}]}]}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"edgePoint", "[", "window", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"critCPM", "[", "window", "]"}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"imgProcessed", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "=", "1"}], 
                    ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
                 ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}],
               ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"delMarks", " ", "=", " ", 
            RowBox[{"Position", "[", 
             RowBox[{"imgProcessed", ",", " ", "1"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"ind1", ",", " ", "ind2"}], "}"}], "=", 
               RowBox[{"delMarks", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              
              RowBox[{
               RowBox[{"imgData", "[", 
                RowBox[{"[", 
                 RowBox[{"ind1", ",", " ", "ind2"}], "]"}], "]"}], "=", "1"}],
               ";"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", " ", 
               RowBox[{"Length", "[", "delMarks", "]"}]}], "}"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "delMarks", "]"}], "\[Equal]", "0"}], 
             ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"looper", " ", "=", " ", "False"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
       ",", " ", "Infinity"}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"postCPM", "[", "imgData", "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7300638365821447`*^9, 3.730063950752685*^9}, {
   3.730064241622674*^9, 3.730064283213011*^9}, {3.730064317631753*^9, 
   3.730064357297069*^9}, {3.730064402057624*^9, 3.730064465869072*^9}, {
   3.730064495956811*^9, 3.730064496812003*^9}, {3.730064539540592*^9, 
   3.730064539753644*^9}, {3.730065496430324*^9, 3.730065523077009*^9}, {
   3.730065554061655*^9, 3.730065555060276*^9}, {3.730066106280017*^9, 
   3.730066116568543*^9}, {3.730066167471113*^9, 3.730066178924726*^9}, {
   3.730066414702654*^9, 3.7300664204122667`*^9}, {3.730066624380319*^9, 
   3.730066630964714*^9}, {3.730067090031451*^9, 3.730067114452145*^9}, {
   3.730067186818344*^9, 3.730067204023776*^9}, {3.730067291173332*^9, 
   3.73006729783628*^9}, {3.73006757994797*^9, 3.730067580913157*^9}, {
   3.73006769075177*^9, 3.730067692412334*^9}, 3.730068017827273*^9, 
   3.730068063721637*^9},ExpressionUUID->"a3346e89-e77c-48e1-a38d-\
5208b338c1ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"edgePoint", "[", "imgInput_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"array", " ", "=", " ", "imgInput"}], ",", " ", "nCount", ",", 
      RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
      RowBox[{"j", " ", "=", " ", "2"}], ",", " ", "pc", ",", "p0", ",", "p1",
       ",", " ", "p2", ",", " ", "p3", ",", " ", "values", ",", " ", "rule"}],
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pc", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", " ", "j"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p0", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", " ", "+", " ", "1"}], ",", " ", "j"}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"p1", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "j"}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"p2", " ", "=", " ", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", " ", 
         RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p3", " ", "=", 
      RowBox[{"array", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", " ", 
         RowBox[{"j", "-", "1"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"values", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"p0", ",", " ", "p1", ",", " ", "p2", ",", " ", "p3"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nCount", " ", "=", " ", 
      RowBox[{"Total", "[", "values", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{
       RowBox[{"pc", " ", "\[Equal]", " ", "0"}], " ", "&&", " ", 
       RowBox[{"nCount", " ", ">", " ", "0"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.730043670055386*^9, 3.7300436908032007`*^9}, {
  3.730043728067404*^9, 3.730043841734467*^9}, {3.730043875622471*^9, 
  3.730043876173502*^9}},ExpressionUUID->"93034094-fcfb-4818-9adf-\
12096a46e2c6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"critCPM", "[", "imgInput_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"imgData", " ", "=", " ", "imgInput"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{
          RowBox[{"neighbours8", "[", "imgData", "]"}], " ", ">", " ", "1"}], 
         "]"}], ",", " ", 
        RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"connectivity", "[", "imgData", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}], "]"}], ",", " ", 
        RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"netForce", "[", "imgData", "]"}], "\[Equal]", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "0"}], "}"}]}], ",", " ", 
        RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "True", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"netForce", "[", "imgInput_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"imgData", " ", "=", " ", "imgInput"}], ",", " ", 
       RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
       RowBox[{"j", " ", "=", " ", "2"}], ",", " ", "p0", ",", "p1", ",", " ",
        "p2", ",", " ", "p3", ",", " ", "p4", ",", " ", "p5", ",", " ", "p6", 
       ",", " ", "p7", ",", " ", "p8", ",", " ", "positions", ",", " ", 
       "charges", ",", " ", "booleanList", ",", " ", "con", ",", " ", 
       "endPoint", ",", " ", "rulePos", ",", " ", "ruleCharge", ",", " ", 
       RowBox[{"force", " ", "=", " ", "0"}]}], "}"}], ",", " ", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p0", " ", "=", " ", 
       RowBox[{"imgData", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "j"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p1", " ", "=", " ", 
       RowBox[{"imgData", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", 
          RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p2", " ", "=", " ", 
       RowBox[{"imgData", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", " ", 
          RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", " ", "=", 
       RowBox[{"imgData", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", " ", "j"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p4", " ", "=", " ", 
       RowBox[{"imgData", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", " ", "-", "1"}], ",", " ", 
          RowBox[{"j", "-", "1"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p5", " ", "=", " ", 
       RowBox[{"imgData", "[", 
        RowBox[{"[", 
         RowBox[{"i", " ", ",", " ", 
          RowBox[{"j", "-", "1"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p6", " ", "=", " ", 
       RowBox[{"imgData", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", " ", "+", "1"}], ",", " ", 
          RowBox[{"j", "-", "1"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p7", " ", "=", " ", 
       RowBox[{"imgData", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", "+", "1"}], ",", " ", "j"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p8", " ", "=", " ", 
       RowBox[{"imgData", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", "+", "1"}], ",", " ", 
          RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rulePos", ":=", " ", 
       RowBox[{"{", 
        RowBox[{"x_", "\[Rule]", 
         RowBox[{"x", "-", "2"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ruleCharge", " ", ":=", " ", 
       RowBox[{"{", 
        RowBox[{"0", "\[Rule]", 
         RowBox[{"-", "1"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"positions", " ", "=", " ", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"j", "+", "1"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "-", "1"}], ",", " ", 
            RowBox[{"j", "+", "1"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "-", "1"}], ",", " ", "j"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "-", "1"}], ",", " ", 
            RowBox[{"j", "-", "1"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"j", "-", "1"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", " ", 
            RowBox[{"j", "-", "1"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", " ", "j"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", 
            RowBox[{"j", "+", "1"}]}], "}"}]}], "}"}], " ", "/.", " ", 
        "rulePos"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"charges", " ", "=", " ", 
       RowBox[{
        RowBox[{"{", " ", 
         RowBox[{
         "p1", ",", " ", "p2", ",", " ", "p3", ",", " ", "p4", ",", " ", "p5",
           ",", " ", "p6", ",", " ", "p7", ",", " ", "p8"}], "}"}], " ", "/.",
         " ", "ruleCharge"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"force", " ", "=", 
         RowBox[{"force", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "*", 
           RowBox[{"charges", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "0"}], "}"}], " ", "-", " ", 
              RowBox[{"positions", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ")"}], "/", 
            RowBox[{"Power", "[", 
             RowBox[{
              RowBox[{"distance", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
                RowBox[{"positions", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ",", " ", "3"}], 
             "]"}]}]}]}]}], "\[IndentingNewLine]", ",", " ", 
        RowBox[{"{", 
         RowBox[{"k", ",", " ", "1", ",", " ", 
          RowBox[{"Length", "[", "positions", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "force", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"distance", "[", 
   RowBox[{"coordinates1_", ",", " ", "coordinates2_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c1", " ", "=", " ", "coordinates1"}], ",", " ", 
      RowBox[{"c2", " ", "=", " ", "coordinates2"}]}], "}"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Return", " ", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"Power", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"c1", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{"c2", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", "2"}], "]"}], "+", 
        RowBox[{"Power", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"c1", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"c2", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "2"}], "]"}]}], "]"}],
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.730043955443163*^9, 3.730044006138566*^9}, {
   3.730044086477696*^9, 3.7300443279316597`*^9}, {3.7300488022870827`*^9, 
   3.730049082889209*^9}, {3.730049141704314*^9, 3.730049287105633*^9}, {
   3.730049489062806*^9, 3.730049523691104*^9}, {3.730049605663617*^9, 
   3.730049704244108*^9}, {3.730062919239642*^9, 3.730063007923109*^9}, {
   3.730063049522311*^9, 3.730063094120406*^9}, {3.730063136998576*^9, 
   3.730063226963846*^9}, {3.730063274628023*^9, 3.730063376035777*^9}, {
   3.730063420733536*^9, 3.730063678988698*^9}, {3.7300637402903433`*^9, 
   3.730063743729279*^9}, {3.7300639956736097`*^9, 3.7300641194604683`*^9}, {
   3.730065737477895*^9, 3.730065739940549*^9}, {3.730066040282275*^9, 
   3.730066052552895*^9}, {3.730066371434149*^9, 3.7300663781115837`*^9}, 
   3.7300666783158712`*^9, {3.7300667974948387`*^9, 3.730066904293324*^9}, {
   3.730066949660385*^9, 3.730066950115595*^9}, {3.730067001275371*^9, 
   3.730067011760681*^9}},ExpressionUUID->"1f921de1-4ffc-4e9b-96e8-\
a6225101c6bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"critPostCPM", "[", "imgInput_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"imgData", " ", "=", " ", "imgInput"}], ",", " ", 
        RowBox[{"i", "=", "2"}], ",", " ", 
        RowBox[{"j", "=", "2"}], ",", " ", "c", ",", " ", "e", ",", " ", "ne",
         ",", " ", "n", ",", " ", "nw", ",", " ", "w", ",", " ", "sw", ",", 
        " ", "s", ",", " ", "se", ",", "rule"}], "}"}], ",", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rule", " ", ":=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0", "\[Rule]", "True"}], ",", " ", 
          RowBox[{"1", "\[Rule]", " ", "False"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"c", " ", "=", " ", 
        RowBox[{
         RowBox[{"imgData", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "/.", " ", "rule"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"e", " ", "=", " ", 
        RowBox[{
         RowBox[{"imgData", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", " ", 
            RowBox[{"j", "+", "1"}]}], "]"}], "]"}], " ", "/.", " ", 
         "rule"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ne", " ", "=", " ", 
        RowBox[{
         RowBox[{"imgData", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"i", "-", "1"}], ",", " ", 
            RowBox[{"j", "+", "1"}]}], "]"}], "]"}], " ", "/.", " ", 
         "rule"}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"n", " ", "=", 
        RowBox[{
         RowBox[{"imgData", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"i", "-", "1"}], ",", " ", "j"}], "]"}], "]"}], "/.", " ",
          "rule"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"nw", " ", "=", " ", 
        RowBox[{
         RowBox[{"imgData", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"i", " ", "-", "1"}], ",", " ", 
            RowBox[{"j", "-", "1"}]}], "]"}], "]"}], " ", "/.", " ", 
         "rule"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"w", " ", "=", " ", 
        RowBox[{
         RowBox[{"imgData", "[", 
          RowBox[{"[", 
           RowBox[{"i", " ", ",", " ", 
            RowBox[{"j", "-", "1"}]}], "]"}], "]"}], " ", "/.", " ", 
         "rule"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"sw", " ", "=", " ", 
        RowBox[{
         RowBox[{"imgData", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"i", " ", "+", "1"}], ",", " ", 
            RowBox[{"j", "-", "1"}]}], "]"}], "]"}], " ", "/.", " ", 
         "rule"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"s", " ", "=", " ", 
        RowBox[{
         RowBox[{"imgData", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", " ", "j"}], "]"}], "]"}], " ", "/.",
          " ", "rule"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"se", " ", "=", " ", 
        RowBox[{
         RowBox[{"imgData", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", " ", 
            RowBox[{"j", "+", "1"}]}], "]"}], "]"}], " ", "/.", " ", 
         "rule"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"c", " ", "&&", " ", 
           RowBox[{"(", 
            RowBox[{"n", " ", "&&", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"e", " ", "&&", " ", 
                 RowBox[{"!", "ne"}], " ", "&&", " ", 
                 RowBox[{"!", "sw"}], " ", "&&", " ", 
                 RowBox[{"!", "w"}], " ", "&&", 
                 RowBox[{"!", "s"}]}], ")"}], "||", 
               RowBox[{"(", 
                RowBox[{"w", " ", "&&", " ", 
                 RowBox[{"!", "nw"}], " ", "&&", " ", 
                 RowBox[{"!", "se"}], " ", "&&", " ", 
                 RowBox[{"!", "e"}], " ", "&&", 
                 RowBox[{"!", "s"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}], "||",
          "\[IndentingNewLine]", 
         RowBox[{"(", 
          RowBox[{"c", " ", "&&", " ", 
           RowBox[{"(", 
            RowBox[{"s", " ", "&&", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"e", " ", "&&", 
                 RowBox[{"!", "se"}], " ", "&&", " ", 
                 RowBox[{"!", "nw"}], " ", "&&", " ", 
                 RowBox[{"!", "w"}], " ", "&&", " ", 
                 RowBox[{"!", "n"}]}], ")"}], "||", 
               RowBox[{"(", 
                RowBox[{"w", " ", "&&", " ", 
                 RowBox[{"!", "sw"}], " ", "&&", " ", 
                 RowBox[{"!", "ne"}], " ", "&&", " ", 
                 RowBox[{"!", "e"}], " ", "&&", " ", 
                 RowBox[{"!", "n"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}],
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.730064565439979*^9, 3.730064595514422*^9}, {
   3.7300646646819887`*^9, 3.730064681932828*^9}, 3.7300649568123083`*^9, {
   3.7300650121286783`*^9, 3.73006504740738*^9}, {3.7300651095890627`*^9, 
   3.730065221408895*^9}, {3.730065255073742*^9, 3.730065266605432*^9}, {
   3.730067788876274*^9, 3.7300679389084473`*^9}, {3.730068236569476*^9, 
   3.7300682395693207`*^9}, 3.730068345681834*^9, {3.7300683865813026`*^9, 
   3.730068504335169*^9}, {3.7300686126360283`*^9, 3.730068614283532*^9}, {
   3.73006874860028*^9, 3.730068749541453*^9}, {3.730068843258651*^9, 
   3.730068844490347*^9}},ExpressionUUID->"551edf33-e607-4568-9940-\
f98d968105ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"postCPM", "[", "imgInput_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"imgData", " ", "=", " ", "imgInput"}], ",", " ", 
      "imgProcessed", ",", " ", "rows", ",", " ", "columns", ",", " ", 
      "conNum", ",", " ", "window", ",", " ", "delMarks", ",", " ", "ind1", 
      ",", " ", "ind2", ",", " ", 
      RowBox[{"looper", "=", "True"}]}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rows", ",", " ", "columns"}], "}"}], " ", "=", " ", 
      RowBox[{"Dimensions", "[", "imgData", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
         "looper", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"imgProcessed", " ", "=", " ", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "rows"}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "columns"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
             RowBox[{"i", " ", "\[LessEqual]", " ", 
              RowBox[{"rows", "-", "1"}]}], ",", " ", 
             RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"j", " ", "=", " ", "2"}], ",", " ", 
                RowBox[{"j", "\[LessEqual]", " ", 
                 RowBox[{"columns", "-", "1"}]}], ",", " ", 
                RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", " ", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"imgData", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "\[Equal]", 
                    "0"}], ",", " ", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"window", " ", "=", 
                    RowBox[{"imgData", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ";;", 
                    RowBox[{"i", "+", "1"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"j", "-", "1"}], ";;", 
                    RowBox[{"j", "+", "1"}]}]}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"critPostCPM", "[", "window", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"neighbours8", "[", "window", "]"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"imgProcessed", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "=", "1"}], 
                    ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    "]"}], ";"}]}], "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"delMarks", " ", "=", " ", 
            RowBox[{"Position", "[", 
             RowBox[{"imgProcessed", ",", " ", "1"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"ind1", ",", " ", "ind2"}], "}"}], "=", 
               RowBox[{"delMarks", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              
              RowBox[{
               RowBox[{"imgData", "[", 
                RowBox[{"[", 
                 RowBox[{"ind1", ",", " ", "ind2"}], "]"}], "]"}], "=", "1"}],
               ";"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", " ", 
               RowBox[{"Length", "[", "delMarks", "]"}]}], "}"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "delMarks", "]"}], "\[Equal]", "0"}], 
             ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"looper", " ", "=", " ", "False"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
       ",", " ", "Infinity"}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "imgData", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7300652862713823`*^9, 3.73006528860563*^9}, {
   3.730065449921945*^9, 3.7300654582483053`*^9}, {3.7300672781830482`*^9, 
   3.730067286348958*^9}, {3.7300673779388237`*^9, 3.730067389819371*^9}, 
   3.7300680760230827`*^9, 3.730068115879698*^9, 3.730068273585381*^9, 
   3.730068647082067*^9, {3.730068795933466*^9, 3.730068807131475*^9}, {
   3.7300688733694363`*^9, 3.7300688818811274`*^9}, {3.730069325968648*^9, 
   3.730069326079481*^9}, {3.730069682281673*^9, 3.7300696824338207`*^9}, {
   3.730070480883731*^9, 
   3.730070502865806*^9}},ExpressionUUID->"ae3aa11a-2004-4b63-b5ca-\
f103531db481"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"imageTest", " ", "=", 
  RowBox[{"Import", "[", 
   RowBox[{"dir", " ", "<>", " ", "\"\<marbles.pbm\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Image", "[", 
  RowBox[{"cPM", "[", 
   RowBox[{"ImageData", "[", "imageTest", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.730560665986307*^9, 
  3.7305607587012444`*^9}},ExpressionUUID->"1ab50108-bd4f-44db-b304-\
08f1baf16186"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvcuyRDmwHSRhBgz5BX8Ac6YMmZrgA+zg2sHkEnFNBMGMT8d9audD75SU
KWlXaXV3PfeWVj6USqVUp//9f/q//sN//u+cc//1f/hvD//hP/4//8u//dt/
/H//t//xv7353//1v/6f/+Vf/+X/+F//9f/+l//yL//2P/+nfy77n/6dc//f
f+8uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4u
Ll4Nr4vd4nw1vIq11tFVgltFOdv3Dpf2eTJj2jsXXsehQ3E3mezL4XVnCmOu
jxto8l3gU+W+zVXGWVSoDOruRHjVIBsJvELov578rhlqPZRtZKW0jz10ydoy
bg4ExyjsC4MzqjsRZuHHG/gKtZifV9d4xjYY5Kk2KvPqmZox3+4lgKmfWdj5
w3oVpD1ZeYmFzH+NNcPlF4egF9joIWrLVpHwZOlBiwZnZKo4A8I5GcQd2Uqr
KnNnp18XhGyMg/pSJGrPVovvITQcZvbaBbOEr/WweOgLy78rwo+ftNLn/uXd
ngZlk9ipy69yKwWqKjRUFPdEH3PVWZRJsSbiIxHaqrEVlqQel21qD+VbsiBF
U9S0pUB0xYoe6M4QVqXpZjfmjGr1WareaGJO0952KWSNzH5YZqazwV5Hez4J
KvqXqetVbMcJG5w4mdTYYsVNsP1jnP8MNqI/XTwytSQ/V2Kdfl+/M6+iBrG6
XkV2OP6Y8JzR2EsUh1ubjv6LhQGJXHvsrRW6W1S9rl8cgfS0IFPVDNPVZIcN
a8RmgMhyAw9TffjyBp41F0oSy3JQ/tMvs16/Lz6dqKYEubaGqW5ge5paD6Ki
z5TTxbcOkqDC2RisrB8g+4igir2/MQSpa0Ggpxdx9f1mtS21vEJlA0RDwnC+
na/B8mdOw2t2i7/XMO9Lgiy0IFHUi7h2ORVN3wfw2bX06qQZkf7c66m0zNry
6UlyV90ZXC2zXOjtBE6AlRIMtLSNahfbJRWqdyhtbCgEN3s4OFBRcf1gwnKZ
hUIfQOEEmKpBWUXbuMrpWh8u7iW0hsskyQJnrtRa/Kl3tFbgOpc1tN708zBD
NTTV9BqmXl4BWrc/J2K0iEuZ5AieW/Go8/Mpv+JZmtFR1HIOdKTYB1A4AvZ6
UNLRXqJisgtPBzjBeehlZMrosHHE+lFoYXPL47LM12f8I2W27f41KZCpGgSK
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
CIJgnH9wVkUt
    "], {{0, 813}, {1152, 0}}, {0, 1},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1152, 813},
  PlotRange->{{0, 1152}, {0, 813}}]], "Output",
 CellChangeTimes->{3.730560725430084*^9, 
  3.730560759318544*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyk3Qe4bldVLuDfvffpLeecJCchPaT3kFASAkkAEQQEpIlgoSmIWBAboCIi
FrAhdhQbVrB3xYIVCyqoCCJWFAv23v473rnGt/ba58aQ597zPMne+y9rzTXG
N77xjTHnmusRT3neM5/xnKc871lPe8r57/fcp3zcM5/1tE84/8Ef+9x6afN9
VquNZ6xW7/O956/8vl6t8r/1evy//veR44XV/8MLu8aPzfXm5uZ69+7d/ltd
PP6/td61a9d43Vfqlcf5ZWO9sbGx2r1+n/d5n/X+/fvHewcOHFjv3bvXZzd8
aXV4HCpf9Z+P5xR+bm1tjd+953fv18/xhRqTl5x9z54942PO+YAeqdcz0hvH
/6fX+hSrr5iGOb2R8/jrnPH/cbBxYMPuS/PlXYvjuxofvtX/N/x5+fxbDW/f
vn3jyP7rq1xt9hkdta+sjTvb+J73vOf6hS98of/Kxv6/tX7uc5+7fsADHrC+
+93vvr744osf1R81vhMnToy/NqYLqk+sTl8fOnRo/eAHP3h973vfe/2oRz1q
feONN65vuumm9ZOf/OT1DTfcsP6QD/mQ9W233ba+173utb7HPe6xvs997rN+
9KMfPT7rc3n99NNPH+85yf3vf/9xjrLNlVdeOV4ynMsuu2x96aWXuqLbelhs
fO65564/8RM/cXWvcQW71s9+9rPXx48fH1d37NixYaJX9uUzdV3V+iEPecj6
Oc95zvrTP/3Tyw2+d3j9/Oc/f/3BH/zB68c97nHrJzzhCetLLrlkfcEFF4zv
cAs/nHPOOevzzjtvXNlTnvKU9cd+7MfeOr6+Z/2CF7xg/TEf8zHrj/u4j1t/
xmd8xjCsn5/2aZ+2uqiHls/U19Yf8REfsb711lvLkHWw+r4rvOqqq8ZpP/AD
P3D9mMc8Zv3MZz5zQOgkvz3rWc9a/8u//Iv/ym/+v7X+m7/5m3F4dr/f/e43
+e3igQwm9vOMM84YF+IMdeZhW6546Utfun7xi1+8fvrTn84g68/5nM8ZRvzq
r/7q9Yte9KL1Z37mZ46/Hf5lL3vZuAIw+aRP+qTh+vd93/ddP/axjx0ufNCD
HjT85XdGOuuss9Yf8AEfsL7ooouGMWscqziPYRn97/7u78p5LmPX+k//9E/X
n/qpn7r+oA/6oOHAcuT/5TxWfdOb3rT+67/+63Ke7x1e/8M//MP6J37iJ9Y/
/uM/vn7JS16yfr/3e7/19ddfP74DJEePHl0//vGPX7//+7//+mu/9mvH9//o
j/7o1vH1Pet/+qd/Wv/BH/zB+k/+5E/Wf/zHfzz+7p/lvO1TfP/3f//6N3/z
N9ff933ft/7SL/3SYQrOcqm33377uMxy+DDlq1/9atg7yXe+0f9Wl4z/b65f
8YpXrL/8y7+c8VaT4+4+Bn755ZevDx8+PBwWYgKR+973vuvnPe95UD8c9OEf
/uHDgR/5kR85nPRZn/VZwzne8/OzP/uz11/5lV+5ftKTnjQc7LOFkRGDkH7q
qaeO0d9yyy3rm2++eUQNcMAZ+gzTceYb3/jGMep7jf/vWv/P//zP+s/+7M9G
ND3ykY803tWXjc9vrQ8ePDjG+b3f+73wec74yuH1v/7rv65f+9rXrn/5l395
fOURj3jEQL9LxlZ8/6Ef+qEjEBn7r/7qr9b/8R//cZuvb6z//d//vQ79u7/7
u+vf//3fX7/tbW9b/+d//ud5bUmjiXU3+nT19hjBd3/3d6+/4zu+Y/11X/d1
6y/8wi/EMsMKWAhpYjAWx1Zl6ZP85vp2+m1r/du//dvrL/mSLxlMUNc9ue7C
kYaQBdfBnmvz+xVXXDFM+rCHPWz9yZ/8yeM6Yf3zPu/zxmEMyqHElsj3t8E+
9alPHa9jDMcSR+JOXIs94BMrF1544QAjl9b547WnPe1p6/e85z1jzPdpr339
13/98LhrRgs15NWXttfkmoc+9KHrN7zhDet/+7d/m7x2iN3XP/iDP7j+5m/+
5vXDH/7w9Ud91EfNVygJuBJA/OIv/uL1u9/97uGnB7ahkNOv//qvi/T1f//3
f5/b3vrbv/3b9Z//+Z/3X5O3/uu//muc+Vu/9VtHhAnmL/uyLxvYhVceg8Nr
r712eE5CKO/dBW+5AEf6lE/5FLTymPHR88b4WVGAObAQlgZ4RzAJZayHBf0U
ZB//8R8/vOI1fM8zgsd3DIyHQIlX7na3u63PP//89XXXXTeCCzNdffXVQ0Lc
vhA7X/M1XzMGelO76Hd+53fWT3ziE0cegJwKymbCzcGumK4MuJr8c4CrhtG+
4Au+YLA7ZhdRUMHFGPqbvumbGHz1vm3y8sX67W9/u5+r8+7AKVMI7Z2DnO9F
HjN+1Vd91UBxJZyNkch2jWEyg8iCLtxxFx3z5je/eVDUKaec8tjx0X3DEZwC
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
GPNnHyAES1VnsXI2RhV7EFu8fnN7FvehKge/96KP4hD+ypLF7D2+6gmtzB3g
3cw0dSz3VmvTE4V53VCiK1c9VwIV28+C3TOCRfWW5yn5u+976jn57dXcFWT1
PZ3bzRF8As/9GnnIZm86Of7LRlecIOUKTI4qh03+O32AW9xrDcmCfTfhUOH8
I06lFaSGhsSaZV+oFS9oAKMln8H2qKuG2n57WV8gY7hA+BVdCYvteau9s2+D
b0an7CCvkJptq1yXoMfC917YJlNp+/u15ZPNdvVr2WXdX3kghtOkSMsuI1kz
4mIMuW8PHH7sKM7alvnZ5WZiraGIT/lZLMoYMNBP2xszUHfvz3iNOM12MGQK
wrUB4tGuZdKk09zA+3yJIGmCqRo4Nq/EJaiRNAnjb0HseHBOluGBPNycvJFD
iFZjLOzetnTa1vzUmZ5knLb5PDBaDIse1rx1YeLQ3y686rL5JiIn6+cE9/T0
tMImj298+Pj/GXMRxklObQ4DiYnzbEdN+wUfHJr7Q3032wvDjaLFWHwGn45L
mAifP8QrjORG7vLx2V1Xe5l6I7AdTR0BAlQJ1Cqq0IYrUk+gAbxmpHWmICCl
vkyee5alRGa86KTPEMooUgi2J3tl2K5ZjAo5CCgFN09U5D4j4qmu5PYlXU53
EsZc4S8X1A+XHPzEddvJcOoh05BGkLvZcEZ2xXn//lyeEbLtvmnSXwLHnwor
SZneRCp5JDSdkh3+rWTwUzFtsQSRQZQgHXpNQqDZ/K4gVsRI1AgHObHmeExd
ket06+7xeSEuCHGM8oF1jVf8WbqIrIwjz09RRogpggSJObbdspax7LzhcX/T
22ZYLm5MOaf3HRN5uo6irVMXswBC0w58xxeOTYswTazblh6c7j0HudVqNcuV
LDn2HvboB8TFgS5a99M54kDKKVtYTA2uaYNwC8Fo8DyYI4pABqYCyB5NAkRH
oYEwA2bNGjJpBbGx/bT4ISTwFVTmsan8C0O+zm9K1RMd9rnPRRDxkWYt/SLs
CTLDzL76ygf+Ue4JRKUHm+NlpYDyLsucejLzjube47ZQvUOgQj6qCzmtDZcd
uSfhNDUO8/xgklk1gR7qam7d6blMpG7nnz3LeZs5FpXQqpVbF2rT9W+76pT5
0eqSr1yw2LpxJGvfETOmUrkqT7EQx+Xaafpy3/y4Fl9HMvgKazIj07qz5oxG
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
5GgkeWkQOTBshwUSbwnCt+aGELOASApC+LDfp9409q9YY7iwbWDOf8KITBoW
OwdBONmHwvXgREWyLPqJXrId9liwnnY/rBpZxbXEPcYinSwn3v23/mi69Bps
pZK5BwCSQhNWbxB90cSTDUSJSAKv4KC/8jP9RB81XiWKUs60l7NjxgIVAdKN
GOdn0rCqTUqmp7r6Ez2KmC69AS2mW0p6sB8Z7s5MZPc58JLth4SdYmxu1Eh7
WT890qZM7xY7SZp7c1mywjlTTy6TObtazMkhNQNSomcZ86rZksyIix0GfVX+
yyGyvD5P484bDNLTAcbiQDJwmbsKPLdhR+iL7Eb4Jw2eYBeQCAxZwahM3lQs
DVOAhFPYZZPZW55lZGBBVPTM5IkpppOkRQTL+j2c3e/SnOvG6TP0H5bklOgh
H0/b96A+2k4oiNaQku+Udz+7kAnFkl5rCfYYufqIavmHlhQm15lxUtIgAbPn
rLCneN9PLVE112gSXttAbonMpafkCQb6lqocGzZFhqmEX59KBxcuoHYCRtPY
02u064mglHHySc7HqCxsVCJ85jj05M6NXEzGoPrM6cCV9Pqgk/rGg7Z+6lGP
My72J3KwYPGMy+bjECZ1C2AJuJmZbIHaDRCHYQayidE8ad7PLQEBEGo+UlFO
gakBkZLS1SV75w3CXj311YW8GYDI2JcJUmzMJ8uYfvpYv0YMXZrefWkyJi2s
D0ca1Pfw9Xnue4Zd8g02JbnGH5GOvuE0dx0BGObmQ0/3AwCmEf/u7/7uMaPi
dhbJVC1BH3kqCUMRAb/G+0YbVa67gltKF2hbffu97UCgjYGraCBNBt/4tB1I
T8dJobO0l+432TaKaecUKahjB0ghS4KIBmQS9cjTxy0KecJVcBNQTDF9o9Sg
OLn3tU/ap6MEwQEiQsxZXpYCRxmm7gcHZFODlMgZzNyyZYfr3IWFRRloWkD4
WoHRURIlU64ARA4Y1UHLMkmZv5mAMtXWpneWF4Efay+hvNZBiAOAa27tLW6K
Xnf77brIFOMSqBDTzbg6N0pDku3KmXnshsmqOAjd7l/6WKuHdFIeSVeSNB4u
0tdR5fTWSwN4IexgmUT4HWOxp+3NXqzNITDWICNR/iZJaTuGvu/gfGrrrCNo
kgq/RXI0S8pmJkVhPM5d8jcWs+o/W7dIYKVyQztqTCJeze2YOd0zqpJp6+G/
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
\
\>"],ExpressionUUID->"bc5791df-a903-476a-ae7a-0cc61fecb1cc"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.730560725430084*^9, 
  3.730615784495183*^9},ExpressionUUID->"c2bbab22-6da0-414f-8949-\
709b96a77384"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 655},
WindowMargins->{{2, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 190, 3, 160, "Title",ExpressionUUID->"71f35941-b08c-424a-baa8-252a5a3b7657"],
Cell[CellGroupData[{
Cell[795, 29, 161, 3, 67, "Section",ExpressionUUID->"c39ca771-a537-4a66-8257-52e888755311"],
Cell[959, 34, 251, 6, 73, "Input",ExpressionUUID->"2ffddc5d-25b6-40e7-b71e-303c3e592c2f"]
}, Closed]],
Cell[CellGroupData[{
Cell[1247, 45, 176, 3, 53, "Section",ExpressionUUID->"ca65c520-946d-4ef3-986d-4c0122df0c6c"],
Cell[CellGroupData[{
Cell[1448, 52, 185, 3, 54, "Subsection",ExpressionUUID->"8f4988c9-54d0-4ea6-8374-61b95a40ff28"],
Cell[1636, 57, 6298, 143, 535, "Input",ExpressionUUID->"a6706d39-7b12-455f-8a16-ff6d8787be69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7971, 205, 179, 3, 54, "Subsection",ExpressionUUID->"92e84e06-8d59-4110-b52d-8d88d8b3c3ae"],
Cell[8153, 210, 885, 17, 220, "Input",ExpressionUUID->"a9894c1f-21e0-42b2-a849-6d179d2b4527"],
Cell[9041, 229, 20333, 394, 1942, "Input",ExpressionUUID->"906b2933-71e7-4d59-b87b-226604c92386"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29411, 628, 201, 3, 54, "Subsection",ExpressionUUID->"776a3389-e983-4c90-a4a6-a2828537cc9a"],
Cell[29615, 633, 9010, 176, 955, "Input",ExpressionUUID->"e5f0fb8c-a5e0-4596-a6c5-0654116aaf56"],
Cell[38628, 811, 324, 5, 30, "Input",ExpressionUUID->"974097e4-51ca-4ceb-95ba-52d364681537"],
Cell[CellGroupData[{
Cell[38977, 820, 170, 3, 45, "Subsubsection",ExpressionUUID->"a9c4b217-68c9-4cd4-abcc-df87f3a7519e"],
Cell[39150, 825, 8858, 225, 1207, "Input",ExpressionUUID->"cbb73c45-5811-480c-82d1-cdccdb20d575"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48057, 1056, 175, 3, 54, "Subsection",ExpressionUUID->"fa4b7faa-abb5-44c7-ac06-4ee8b99aadb1"],
Cell[48235, 1061, 24434, 498, 2572, "Input",ExpressionUUID->"848b8899-5840-4047-ae2e-e642dd98ebc6"],
Cell[72672, 1561, 876, 13, 30, "Input",ExpressionUUID->"b3b76ab3-ae7c-4e7e-83f8-667e1e39a3c3"],
Cell[CellGroupData[{
Cell[73573, 1578, 175, 3, 45, "Subsubsection",ExpressionUUID->"6aebf794-defd-4edb-a98a-4266965244c5"],
Cell[73751, 1583, 1535, 41, 115, "Input",ExpressionUUID->"ff68aa66-1bd5-4f0f-a8b5-60ab02be17e2"],
Cell[75289, 1626, 130, 3, 30, "Input",ExpressionUUID->"a6f59af4-1683-4215-a6d9-2480771917fe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75480, 1636, 167, 3, 67, "Section",ExpressionUUID->"2b276624-0114-483f-923d-7cc73553d680"],
Cell[75650, 1641, 7260, 145, 1039, "Input",ExpressionUUID->"35eddbff-48ac-40ab-90ec-b84ecca0dd22"],
Cell[82913, 1788, 4249, 107, 598, "Input",ExpressionUUID->"2c1fc8fd-9691-416a-b836-adb66dcdf703"],
Cell[87165, 1897, 478, 7, 30, "Input",ExpressionUUID->"f3e3f620-4747-42a3-b1f8-48bb83796694"],
Cell[CellGroupData[{
Cell[87668, 1908, 167, 3, 54, "Subsection",ExpressionUUID->"ce4ca4d6-ef44-4b39-a1ca-f4fbcc7b50f4"],
Cell[87838, 1913, 7942, 164, 1165, "Input",ExpressionUUID->"ac149826-20b9-497e-aab6-0c6a7d33b9ad"],
Cell[CellGroupData[{
Cell[95805, 2081, 200, 3, 45, "Subsubsection",ExpressionUUID->"623db9a2-9d0f-415f-ab46-b7d99be5630c"],
Cell[96008, 2086, 6469, 157, 640, "Input",ExpressionUUID->"c1d5f27c-eadc-49fb-a229-6b0e2169b826"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[102538, 2250, 167, 3, 67, "Section",ExpressionUUID->"674c1c01-c510-42f3-9453-be9304c5cbaa"],
Cell[102708, 2255, 6717, 140, 1081, "Input",ExpressionUUID->"a3346e89-e77c-48e1-a38d-5208b338c1ba"],
Cell[109428, 2397, 2340, 57, 325, "Input",ExpressionUUID->"93034094-fcfb-4818-9adf-12096a46e2c6"],
Cell[111771, 2456, 9538, 237, 913, "Input",ExpressionUUID->"1f921de1-4ffc-4e9b-96e8-a6225101c6bc"],
Cell[121312, 2695, 5862, 138, 472, "Input",ExpressionUUID->"551edf33-e607-4568-9940-f98d968105ab"],
Cell[127177, 2835, 6249, 133, 1039, "Input",ExpressionUUID->"ae3aa11a-2004-4b63-b5ca-f103531db481"],
Cell[CellGroupData[{
Cell[133451, 2972, 418, 10, 52, "Input",ExpressionUUID->"1ab50108-bd4f-44db-b304-08f1baf16186"],
Cell[133872, 2984, 165910, 2725, 450, 49221, 811, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"bc5791df-a903-476a-ae7a-0cc61fecb1cc"],
Cell[299785, 5711, 159, 3, 34, "Output",ExpressionUUID->"c2bbab22-6da0-414f-8949-709b96a77384"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

